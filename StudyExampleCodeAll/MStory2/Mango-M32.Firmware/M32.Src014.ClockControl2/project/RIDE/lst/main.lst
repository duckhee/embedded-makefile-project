
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\project\RIDE\obj\main.o:     file format elf32-littlearm
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\project\RIDE\obj\main.o

Disassembly of section .text.System_Information:

00000000 <System_Information>:
System_Information():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:19
/* functions */

extern __IO uint32_t StartUpCounter;

void System_Information()
{
   0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:22
    RCC_ClocksTypeDef  rcc_clocks;

    printf("StartUpCounter : %d\n", StartUpCounter);
   2:	4b0f      	ldr	r3, [pc, #60]	(40 <System_Information+0x40>)
   4:	480f      	ldr	r0, [pc, #60]	(44 <System_Information+0x44>)
   6:	6819      	ldr	r1, [r3, #0]
   8:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:24

    RCC_GetClocksFreq(&rcc_clocks);
   c:	a801      	add	r0, sp, #4
   e:	f7ff fffe 	bl	0 <RCC_GetClocksFreq>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:25
    printf("SYSCLK_Frequency = %d\n",rcc_clocks.SYSCLK_Frequency );
  12:	9901      	ldr	r1, [sp, #4]
  14:	480c      	ldr	r0, [pc, #48]	(48 <System_Information+0x48>)
  16:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:26
    printf("HCLK_Frequency = %d\n",rcc_clocks.HCLK_Frequency );
  1a:	9902      	ldr	r1, [sp, #8]
  1c:	480b      	ldr	r0, [pc, #44]	(4c <System_Information+0x4c>)
  1e:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:27
    printf("PCLK1_Frequency = %d\n",rcc_clocks.PCLK1_Frequency );
  22:	9903      	ldr	r1, [sp, #12]
  24:	480a      	ldr	r0, [pc, #40]	(50 <System_Information+0x50>)
  26:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:28
    printf("PCLK2_Frequency = %d\n",rcc_clocks.PCLK2_Frequency );
  2a:	9904      	ldr	r1, [sp, #16]
  2c:	4809      	ldr	r0, [pc, #36]	(54 <System_Information+0x54>)
  2e:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:29
    printf("ADCCLK_Frequency = %d\n",rcc_clocks.ADCCLK_Frequency );
  32:	9905      	ldr	r1, [sp, #20]
  34:	4808      	ldr	r0, [pc, #32]	(58 <System_Information+0x58>)
  36:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:30
}
  3a:	b007      	add	sp, #28
  3c:	bd00      	pop	{pc}
  3e:	46c0      	nop			(mov r8, r8)
	...
  48:	00000015 	.word	0x00000015
  4c:	0000002c 	.word	0x0000002c
  50:	00000041 	.word	0x00000041
  54:	00000057 	.word	0x00000057
  58:	0000006d 	.word	0x0000006d
Disassembly of section .text.main:

00000000 <main>:
main():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:39
 * Input  : None
 * Output : None
 * Return : None
 */
int main(void)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:42
    uint8_t ch;

    RCC_Configuration();
   2:	f7ff fffe 	bl	0 <RCC_Configuration>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:44

    RCC->APB2ENR |= RCC_APB2Periph_GPIOA;
   6:	4a26      	ldr	r2, [pc, #152]	(a0 <main+0xa0>)
   8:	6993      	ldr	r3, [r2, #24]
   a:	f043 0304 	orr.w	r3, r3, #4	; 0x4
   e:	6193      	str	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:45
    RCC->APB2ENR |= RCC_APB2Periph_GPIOB;
  10:	6993      	ldr	r3, [r2, #24]
  12:	f043 0308 	orr.w	r3, r3, #8	; 0x8
  16:	6193      	str	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:46
    RCC->APB2ENR |= RCC_APB2Periph_USART1;
  18:	6993      	ldr	r3, [r2, #24]
  1a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  1e:	6193      	str	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:48

    GPIO_Configuration();
  20:	f7ff fffe 	bl	0 <GPIO_Configuration>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:50

    USART1_Init();
  24:	f7ff fffe 	bl	0 <USART1_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:54

    while(1)
    {
        printf("\n---------------------\n");
  28:	481e      	ldr	r0, [pc, #120]	(7c <puts+0x7c>)
  2a:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:55
        printf("Press menu key\n");
  2e:	481e      	ldr	r0, [pc, #120]	(7c <puts+0x7c>)
  30:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:56
        printf("---------------------\n");
  34:	481d      	ldr	r0, [pc, #116]	(78 <puts+0x78>)
  36:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:57
        printf("0> System Information\n");
  3a:	481d      	ldr	r0, [pc, #116]	(78 <puts+0x78>)
  3c:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:58
        printf("---------------------\n");
  40:	481a      	ldr	r0, [pc, #104]	(6c <puts+0x6c>)
  42:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:59
        printf("1> LED Test\n");
  46:	481b      	ldr	r0, [pc, #108]	(70 <puts+0x70>)
  48:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:60
        printf("2> KEY Test\n");
  4c:	481a      	ldr	r0, [pc, #104]	(6c <puts+0x6c>)
  4e:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:61
        printf("3> 7-Segment Test\n");
  52:	481a      	ldr	r0, [pc, #104]	(6c <puts+0x6c>)
  54:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:62
        printf("---------------------\n");
  58:	4814      	ldr	r0, [pc, #80]	(54 <puts+0x54>)
  5a:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:63
        printf("x> quit\n\n");
  5e:	4818      	ldr	r0, [pc, #96]	(64 <puts+0x64>)
  60:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:65

        ch = USART_GetCharacter(USART1);
  64:	4817      	ldr	r0, [pc, #92]	(60 <USART_GetCharacter+0x60>)
  66:	f7ff fffe 	bl	0 <USART_GetCharacter>
  6a:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:66
        printf(" is selected\n\n");
  6c:	4816      	ldr	r0, [pc, #88]	(c8 <main+0xc8>)
  6e:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:68

        switch((char)ch)
  72:	b263      	sxtb	r3, r4
  74:	3b30      	subs	r3, #48
  76:	2b03      	cmp	r3, #3
  78:	d80e      	bhi.n	98 <main+0x98>
  7a:	e8df f003 	tbb	[pc, r3]
  7e:	0502      	.short	0x0502
  80:	0b08      	.short	0x0b08
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:71
        {
        case '0':
            System_Information();
  82:	f7ff fffe 	bl	0 <main>
  86:	e007      	b.n	12 <LED_Test+0x12>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:75
            break;

        case '1':
            LED_Test();
  88:	f7ff fffe 	bl	0 <LED_Test>
  8c:	e004      	b.n	c <KEY_Test+0xc>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:79
            break;

        case '2':
            KEY_Test();
  8e:	f7ff fffe 	bl	0 <KEY_Test>
  92:	e001      	b.n	6 <Seven_Segment_Test+0x6>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:83
            break;

        case '3':
            Seven_Segment_Test();
  94:	f7ff fffe 	bl	0 <Seven_Segment_Test>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:87
            break;
        }

        if('x' == (char)ch)
  98:	2c78      	cmp	r4, #120
  9a:	d1c5      	bne.n	28 <main+0x28>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src014.ClockControl2\src/main.c:92
        {
            break;
        }
    }
}
  9c:	bd10      	pop	{r4, pc}
  9e:	46c0      	nop			(mov r8, r8)
  a0:	40021000 	.word	0x40021000
  a4:	00000084 	.word	0x00000084
  a8:	0000009b 	.word	0x0000009b
  ac:	000000aa 	.word	0x000000aa
  b0:	000000c0 	.word	0x000000c0
  b4:	000000d6 	.word	0x000000d6
  b8:	000000e2 	.word	0x000000e2
  bc:	000000ee 	.word	0x000000ee
  c0:	00000100 	.word	0x00000100
  c4:	40013800 	.word	0x40013800
  c8:	00000109 	.word	0x00000109
