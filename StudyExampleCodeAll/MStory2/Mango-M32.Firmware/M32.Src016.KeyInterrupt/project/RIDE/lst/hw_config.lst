
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\project\RIDE\obj\hw_config.o:     file format elf32-littlearm
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\project\RIDE\obj\hw_config.o

Disassembly of section .text.RCC_Configuration:

00000000 <RCC_Configuration>:
RCC_Configuration():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:90

__IO uint32_t StartUpCounter = 0;

void RCC_Configuration(void)
{
    __IO uint32_t  HSEStatus = 0;
   0:	2300      	movs	r3, #0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:94

    /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
    /* Enable HSE */    
    RCC->CR |= ((uint32_t)RCC_CR_HSEON);
   2:	4a1f      	ldr	r2, [pc, #124]	(80 <RCC_Configuration+0x80>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:89
 */

__IO uint32_t StartUpCounter = 0;

void RCC_Configuration(void)
{
   4:	b082      	sub	sp, #8
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:90
    __IO uint32_t  HSEStatus = 0;
   6:	9301      	str	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:94

    /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
    /* Enable HSE */    
    RCC->CR |= ((uint32_t)RCC_CR_HSEON);
   8:	6813      	ldr	r3, [r2, #0]
   a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   e:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:99

    /* Wait till HSE is ready and if Time out is reached exit */
    do
    {
        HSEStatus = RCC->CR & RCC_CR_HSERDY;
  10:	4b1b      	ldr	r3, [pc, #108]	(80 <RCC_Configuration+0x80>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:100
        StartUpCounter++;  
  12:	4a1c      	ldr	r2, [pc, #112]	(84 <RCC_Configuration+0x84>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:99
    RCC->CR |= ((uint32_t)RCC_CR_HSEON);

    /* Wait till HSE is ready and if Time out is reached exit */
    do
    {
        HSEStatus = RCC->CR & RCC_CR_HSERDY;
  14:	681b      	ldr	r3, [r3, #0]
  16:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  1a:	9301      	str	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:100
        StartUpCounter++;  
  1c:	6813      	ldr	r3, [r2, #0]
  1e:	3301      	adds	r3, #1
  20:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:101
    } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));
  22:	9b01      	ldr	r3, [sp, #4]
  24:	b91b      	cbnz	r3, 2e <RCC_Configuration+0x2e>
  26:	6813      	ldr	r3, [r2, #0]
  28:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
  2c:	d1f0      	bne.n	10 <RCC_Configuration+0x10>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:104

    /* Flash 2 wait state */
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
  2e:	4a16      	ldr	r2, [pc, #88]	(88 <RCC_Configuration+0x88>)
  30:	6813      	ldr	r3, [r2, #0]
  32:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  36:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:107

    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
  38:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
  3c:	6853      	ldr	r3, [r2, #4]
  3e:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:110

    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
  40:	6853      	ldr	r3, [r2, #4]
  42:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:113

    /* PCLK1 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
  44:	6853      	ldr	r3, [r2, #4]
  46:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  4a:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:116

    /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
  4c:	6853      	ldr	r3, [r2, #4]
  4e:	f443 1388 	orr.w	r3, r3, #1114112	; 0x110000
  52:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:119

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
  54:	6813      	ldr	r3, [r2, #0]
  56:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  5a:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:122

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0){;}
  5c:	4a08      	ldr	r2, [pc, #32]	(80 <RCC_Configuration+0x80>)
  5e:	6813      	ldr	r3, [r2, #0]
  60:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
  64:	d0fa      	beq.n	5c <RCC_Configuration+0x5c>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:125

    /* Select PLL as system clock source */
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
  66:	6853      	ldr	r3, [r2, #4]
  68:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  6c:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:128

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08){;}
  6e:	4b04      	ldr	r3, [pc, #16]	(80 <RCC_Configuration+0x80>)
  70:	685b      	ldr	r3, [r3, #4]
  72:	f003 030c 	and.w	r3, r3, #12	; 0xc
  76:	2b08      	cmp	r3, #8
  78:	d1f9      	bne.n	6e <RCC_Configuration+0x6e>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:129
}
  7a:	b002      	add	sp, #8
  7c:	4770      	bx	lr
  7e:	46c0      	nop			(mov r8, r8)
  80:	40021000 	.word	0x40021000
  84:	00000000 	.word	0x00000000
  88:	40022000 	.word	0x40022000
Disassembly of section .text.NVIC_SetVectorTable:

00000000 <NVIC_SetVectorTable>:
NVIC_SetVectorTable():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:136
#define NVIC_VectTab_RAM             ((uint32_t)0x20000000)
#define NVIC_VectTab_FLASH           ((uint32_t)0x08000000)

void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
{ 
  SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
   0:	f021 4160 	bic.w	r1, r1, #3758096384	; 0xe0000000
   4:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   8:	4b01      	ldr	r3, [pc, #4]	(10 <NVIC_SetVectorTable+0x10>)
   a:	4301      	orrs	r1, r0
   c:	6099      	str	r1, [r3, #8]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:137
}
   e:	4770      	bx	lr
  10:	e000ed00 	.word	0xe000ed00
Disassembly of section .text.Delay:

00000000 <Delay>:
Delay():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:241
  * @brief  Inserts a delay time.
  * @param  nTime: specifies the delay time length, in milliseconds.
  * @retval None
  */
void Delay(__IO uint32_t nTime)
{ 
   0:	b082      	sub	sp, #8
   2:	9001      	str	r0, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:242
  TimingDelay = nTime;
   4:	9a01      	ldr	r2, [sp, #4]
   6:	4b04      	ldr	r3, [pc, #16]	(18 <Delay+0x18>)
   8:	605a      	str	r2, [r3, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:244

  while(TimingDelay != 0);
   a:	4b03      	ldr	r3, [pc, #12]	(18 <Delay+0x18>)
   c:	685b      	ldr	r3, [r3, #4]
   e:	2b00      	cmp	r3, #0
  10:	d1fb      	bne.n	a <Delay+0xa>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:245
}
  12:	b002      	add	sp, #8
  14:	4770      	bx	lr
  16:	46c0      	nop			(mov r8, r8)
  18:	00000000 	.word	0x00000000
Disassembly of section .text.delay_100_milli_second:

00000000 <delay_100_milli_second>:
delay_100_milli_second():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:26
{
    Delay(1000);
}

void delay_100_milli_second(void)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:27
    Delay(100);
   2:	2064      	movs	r0, #100
   4:	f7ff fffe 	bl	0 <delay_100_milli_second>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:28
}
   8:	bd10      	pop	{r4, pc}
   a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.delay_1_second:

00000000 <delay_1_second>:
delay_1_second():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:21
static volatile uint32_t TimingDelay;

/* functions */

void delay_1_second(void)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:22
    Delay(1000);
   2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   6:	f7ff fffe 	bl	0 <delay_1_second>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:23
}
   a:	bd10      	pop	{r4, pc}
Disassembly of section .text.TimingDelay_Decrement:

00000000 <TimingDelay_Decrement>:
TimingDelay_Decrement():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:254
  * @param  None
  * @retval None
  */
void TimingDelay_Decrement(void)
{
  if (TimingDelay != 0x00)
   0:	4a03      	ldr	r2, [pc, #12]	(10 <TimingDelay_Decrement+0x10>)
   2:	6853      	ldr	r3, [r2, #4]
   4:	b113      	cbz	r3, c <TimingDelay_Decrement+0xc>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:256
  { 
    TimingDelay--;
   6:	6853      	ldr	r3, [r2, #4]
   8:	3b01      	subs	r3, #1
   a:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:258
  }
}
   c:	4770      	bx	lr
   e:	46c0      	nop			(mov r8, r8)
  10:	00000000 	.word	0x00000000
Disassembly of section .text.USART_GetCharacter:

00000000 <USART_GetCharacter>:
USART_GetCharacter():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:284

    return ch;
}

uint8_t USART_GetCharacter(USART_TypeDef *  usart_p)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:288
    uint8_t data;

    /* Loop until the end of transmission */
    while(USART_GetFlagStatus(usart_p, USART_FLAG_RXNE) == RESET);
   4:	4628      	mov	r0, r5
   6:	2120      	movs	r1, #32
   8:	f7ff fffe 	bl	0 <USART_GetFlagStatus>
   c:	2800      	cmp	r0, #0
   e:	d0f9      	beq.n	4 <USART_GetCharacter+0x4>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:291

    /* Write a character to the USART */
    data = USART_ReceiveData(usart_p);
  10:	4628      	mov	r0, r5
  12:	f7ff fffe 	bl	0 <USART_ReceiveData>
  16:	b2c4      	uxtb	r4, r0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:293

    USART_SendData(usart_p, data);
  18:	4621      	mov	r1, r4
  1a:	4628      	mov	r0, r5
  1c:	f7ff fffe 	bl	0 <USART_SendData>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:294
    while(USART_GetFlagStatus(usart_p, USART_FLAG_TXE) == RESET);
  20:	4628      	mov	r0, r5
  22:	2180      	movs	r1, #128
  24:	f7ff fffe 	bl	0 <USART_GetFlagStatus>
  28:	2800      	cmp	r0, #0
  2a:	d0f9      	beq.n	20 <USART_GetFlagStatus+0x20>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:298

    if( data == '\r' )  return (int)('\n');
    else                return(data);
}
  2c:	2c0d      	cmp	r4, #13
  2e:	bf14      	ite	ne
  30:	4620      	movne	r0, r4
  32:	200a      	moveq	r0, #10
  34:	bd70      	pop	{r4, r5, r6, pc}
  36:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.__io_putchar:

00000000 <__io_putchar>:
__io_putchar():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:269
#endif /* __GNUC__ */

PUTCHAR_PROTOTYPE
{
    /* Write a character to the USART */  
    if( ch == '\n') {
   0:	280a      	cmp	r0, #10
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:267
#else
  #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#endif /* __GNUC__ */

PUTCHAR_PROTOTYPE
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:269
    /* Write a character to the USART */  
    if( ch == '\n') {
   6:	d10c      	bne.n	22 <__io_putchar+0x22>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:270
        USART_SendData(USART1, '\r');
   8:	480c      	ldr	r0, [pc, #48]	(3c <__io_putchar+0x3c>)
   a:	210d      	movs	r1, #13
   c:	f7ff fffe 	bl	0 <USART_SendData>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:271
        while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
  10:	480a      	ldr	r0, [pc, #40]	(3c <__io_putchar+0x3c>)
  12:	2180      	movs	r1, #128
  14:	f7ff fffe 	bl	0 <USART_GetFlagStatus>
  18:	2800      	cmp	r0, #0
  1a:	d0f9      	beq.n	10 <__io_putchar+0x10>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:272
        USART_SendData(USART1, '\n');
  1c:	4807      	ldr	r0, [pc, #28]	(3c <__io_putchar+0x3c>)
  1e:	210a      	movs	r1, #10
  20:	e001      	b.n	26 <__io_putchar+0x26>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:274
    }else {
        USART_SendData(USART1, (uint8_t) ch);
  22:	4806      	ldr	r0, [pc, #24]	(3c <__io_putchar+0x3c>)
  24:	b2e1      	uxtb	r1, r4
  26:	f7ff fffe 	bl	0 <USART_SendData>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:278
    }

    /* Loop until the end of transmission */
    while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
  2a:	4804      	ldr	r0, [pc, #16]	(3c <__io_putchar+0x3c>)
  2c:	2180      	movs	r1, #128
  2e:	f7ff fffe 	bl	0 <USART_GetFlagStatus>
  32:	2800      	cmp	r0, #0
  34:	d0f9      	beq.n	2a <USART_GetFlagStatus+0x2a>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:281

    return ch;
}
  36:	4620      	mov	r0, r4
  38:	bd10      	pop	{r4, pc}
  3a:	46c0      	nop			(mov r8, r8)
  3c:	40013800 	.word	0x40013800
Disassembly of section .text.SerialPutChar:

00000000 <SerialPutChar>:
SerialPutChar():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:32
    Delay(100);
}

void SerialPutChar(uint8_t c)
{
  USART_SendData(USART1, c);
   0:	4601      	mov	r1, r0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:31
{
    Delay(100);
}

void SerialPutChar(uint8_t c)
{
   2:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:32
  USART_SendData(USART1, c);
   4:	4804      	ldr	r0, [pc, #16]	(18 <SerialPutChar+0x18>)
   6:	f7ff fffe 	bl	0 <USART_SendData>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:33
  while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   a:	4803      	ldr	r0, [pc, #12]	(18 <SerialPutChar+0x18>)
   c:	2180      	movs	r1, #128
   e:	f7ff fffe 	bl	0 <USART_GetFlagStatus>
  12:	2800      	cmp	r0, #0
  14:	d0f9      	beq.n	a <USART_GetFlagStatus+0xa>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:34
}
  16:	bd10      	pop	{r4, pc}
  18:	40013800 	.word	0x40013800
Disassembly of section .text.Serial_PutString:

00000000 <Serial_PutString>:
Serial_PutString():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:37

void Serial_PutString(uint8_t *s)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	2400      	movs	r4, #0
   6:	e001      	b.n	c <Serial_PutString+0xc>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:40
  while (*s != '\0')
  {
    SerialPutChar(*s);
   8:	f7ff fffe 	bl	0 <Serial_PutString>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:38
  while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
}

void Serial_PutString(uint8_t *s)
{
  while (*s != '\0')
   c:	5d28      	ldrb	r0, [r5, r4]
   e:	3401      	adds	r4, #1
  10:	2800      	cmp	r0, #0
  12:	d1f9      	bne.n	8 <Serial_PutString+0x8>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:43
  {
    SerialPutChar(*s);
    s ++;
  }
}
  14:	bd70      	pop	{r4, r5, r6, pc}
  16:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.EXTI_Configuration:

00000000 <EXTI_Configuration>:
EXTI_Configuration():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:209
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_Init(GPIO_LED, &GPIO_InitStructure);
}

void EXTI_Configuration(void)
{ 
   0:	e92d 4177 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r8, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:214
    EXTI_InitTypeDef EXTI_InitStructure;

    /* Configure gpio as input : Button Left-WKUP */
    /* Connect EXTI Line to gpio pin */
    GPIO_EXTILineConfig(GPIO_PORTSOURCE_KEY, GPIO_PINSOURCE_KEY1);
   4:	2000      	movs	r0, #0
   6:	4601      	mov	r1, r0
   8:	f7ff fffe 	bl	0 <GPIO_EXTILineConfig>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:217

    /* Configure EXTI Line to generate an interrupt */
    EXTI_InitStructure.EXTI_Line    = GPIO_EXTI_Line_KEY1;
   c:	2501      	movs	r5, #1
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:218
    EXTI_InitStructure.EXTI_Mode    = EXTI_Mode_Interrupt;
   e:	2400      	movs	r4, #0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:219
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
  10:	f04f 080c 	mov.w	r8, #12	; 0xc
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:221
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    EXTI_Init(&EXTI_InitStructure);
  14:	4668      	mov	r0, sp
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:217
    /* Configure gpio as input : Button Left-WKUP */
    /* Connect EXTI Line to gpio pin */
    GPIO_EXTILineConfig(GPIO_PORTSOURCE_KEY, GPIO_PINSOURCE_KEY1);

    /* Configure EXTI Line to generate an interrupt */
    EXTI_InitStructure.EXTI_Line    = GPIO_EXTI_Line_KEY1;
  16:	9500      	str	r5, [sp, #0]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:218
    EXTI_InitStructure.EXTI_Mode    = EXTI_Mode_Interrupt;
  18:	f88d 4004 	strb.w	r4, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:219
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
  1c:	f88d 8005 	strb.w	r8, [sp, #5]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:220
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
  20:	f88d 5006 	strb.w	r5, [sp, #6]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:221
    EXTI_Init(&EXTI_InitStructure);
  24:	f7ff fffe 	bl	0 <EXTI_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:225

    /* Configure gpio as input : Button Right-USER */
    /* Connect EXTI Line to gpio pin */
    GPIO_EXTILineConfig(GPIO_PORTSOURCE_KEY, GPIO_PINSOURCE_KEY2);
  28:	4620      	mov	r0, r4
  2a:	4629      	mov	r1, r5
  2c:	f7ff fffe 	bl	0 <GPIO_EXTILineConfig>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:228

    /* Configure EXTI Line to generate an interrupt */  
    EXTI_InitStructure.EXTI_Line    = GPIO_EXTI_Line_KEY2;
  30:	2302      	movs	r3, #2
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:232
    EXTI_InitStructure.EXTI_Mode    = EXTI_Mode_Interrupt;
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    EXTI_Init(&EXTI_InitStructure);
  32:	4668      	mov	r0, sp
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:221
    /* Configure EXTI Line to generate an interrupt */
    EXTI_InitStructure.EXTI_Line    = GPIO_EXTI_Line_KEY1;
    EXTI_InitStructure.EXTI_Mode    = EXTI_Mode_Interrupt;
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    EXTI_Init(&EXTI_InitStructure);
  34:	466e      	mov	r6, sp
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:228
    /* Configure gpio as input : Button Right-USER */
    /* Connect EXTI Line to gpio pin */
    GPIO_EXTILineConfig(GPIO_PORTSOURCE_KEY, GPIO_PINSOURCE_KEY2);

    /* Configure EXTI Line to generate an interrupt */  
    EXTI_InitStructure.EXTI_Line    = GPIO_EXTI_Line_KEY2;
  36:	9300      	str	r3, [sp, #0]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:229
    EXTI_InitStructure.EXTI_Mode    = EXTI_Mode_Interrupt;
  38:	f88d 4004 	strb.w	r4, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:230
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
  3c:	f88d 8005 	strb.w	r8, [sp, #5]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:231
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
  40:	f88d 5006 	strb.w	r5, [sp, #6]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:232
    EXTI_Init(&EXTI_InitStructure);
  44:	f7ff fffe 	bl	0 <EXTI_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:233
}
  48:	e8bd 817e 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r8, pc}
Disassembly of section .text.GPIO_Configuration:

00000000 <GPIO_Configuration>:
GPIO_Configuration():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:171
 * Input  : None
 * Output : None
 * Return : None
 */
void GPIO_Configuration(void)
{
   0:	e92d 4177 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r8, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:180

    /* Configure USARTx_Tx as alternate function push-pull */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Tx_Pin;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
   4:	4d1f      	ldr	r5, [pc, #124]	(84 <GPIO_Configuration+0x84>)
   6:	ae01      	add	r6, sp, #4
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:177
    GPIO_InitTypeDef GPIO_InitStructure;

    // UART configuration ...

    /* Configure USARTx_Tx as alternate function push-pull */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Tx_Pin;
   8:	f44f 7300 	mov.w	r3, #512	; 0x200
   c:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:178
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  10:	f04f 0803 	mov.w	r8, #3	; 0x3
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:179
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  14:	2318      	movs	r3, #24
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:180
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
  16:	4628      	mov	r0, r5
  18:	4631      	mov	r1, r6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:184

    /* Configure USARTx_Rx as input floating */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Rx_Pin;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  1a:	2404      	movs	r4, #4
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:179
    // UART configuration ...

    /* Configure USARTx_Tx as alternate function push-pull */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Tx_Pin;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  1c:	f88d 3007 	strb.w	r3, [sp, #7]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:178

    // UART configuration ...

    /* Configure USARTx_Tx as alternate function push-pull */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Tx_Pin;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  20:	f88d 8006 	strb.w	r8, [sp, #6]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:180
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
  24:	f7ff fffe 	bl	0 <GPIO_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:183

    /* Configure USARTx_Rx as input floating */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Rx_Pin;
  28:	f44f 6380 	mov.w	r3, #1024	; 0x400
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:185
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
  2c:	4628      	mov	r0, r5
  2e:	4631      	mov	r1, r6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:183
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);

    /* Configure USARTx_Rx as input floating */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Rx_Pin;
  30:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:184
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  34:	f88d 4007 	strb.w	r4, [sp, #7]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:185
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
  38:	f7ff fffe 	bl	0 <GPIO_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:190

    // Key configuration ...

    /* Configure gpio as input : Button Left-WKUP */
    GPIO_InitStructure.GPIO_Pin = GPIO_KEY1_PIN;
  3c:	f04f 0301 	mov.w	r3, #1	; 0x1
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:192
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIO_KEY, &GPIO_InitStructure);
  40:	4628      	mov	r0, r5
  42:	4631      	mov	r1, r6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:190
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);

    // Key configuration ...

    /* Configure gpio as input : Button Left-WKUP */
    GPIO_InitStructure.GPIO_Pin = GPIO_KEY1_PIN;
  44:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:191
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  48:	f88d 4007 	strb.w	r4, [sp, #7]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:192
    GPIO_Init(GPIO_KEY, &GPIO_InitStructure);
  4c:	f7ff fffe 	bl	0 <GPIO_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:195

    /* Configure gpio as input : Button Right-USER */
    GPIO_InitStructure.GPIO_Pin = GPIO_KEY2_PIN;
  50:	f04f 0302 	mov.w	r3, #2	; 0x2
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:197
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIO_KEY, &GPIO_InitStructure);
  54:	4628      	mov	r0, r5
  56:	4631      	mov	r1, r6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:195
    GPIO_InitStructure.GPIO_Pin = GPIO_KEY1_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIO_KEY, &GPIO_InitStructure);

    /* Configure gpio as input : Button Right-USER */
    GPIO_InitStructure.GPIO_Pin = GPIO_KEY2_PIN;
  58:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:196
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  5c:	f88d 4007 	strb.w	r4, [sp, #7]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:197
    GPIO_Init(GPIO_KEY, &GPIO_InitStructure);
  60:	f7ff fffe 	bl	0 <GPIO_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:202

    // LED configuration ...

    /* Configure gpio as output : LED1, LED2, LED3 */
    GPIO_InitStructure.GPIO_Pin = GPIO_LED1_PIN | GPIO_LED2_PIN | GPIO_LED3_PIN ;
  64:	f44f 7348 	mov.w	r3, #800	; 0x320
  68:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:205
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_Init(GPIO_LED, &GPIO_InitStructure);
  6c:	4806      	ldr	r0, [pc, #24]	(88 <GPIO_Configuration+0x88>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:204
    // LED configuration ...

    /* Configure gpio as output : LED1, LED2, LED3 */
    GPIO_InitStructure.GPIO_Pin = GPIO_LED1_PIN | GPIO_LED2_PIN | GPIO_LED3_PIN ;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  6e:	2310      	movs	r3, #16
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:205
    GPIO_Init(GPIO_LED, &GPIO_InitStructure);
  70:	4631      	mov	r1, r6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:203

    // LED configuration ...

    /* Configure gpio as output : LED1, LED2, LED3 */
    GPIO_InitStructure.GPIO_Pin = GPIO_LED1_PIN | GPIO_LED2_PIN | GPIO_LED3_PIN ;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  72:	f88d 8006 	strb.w	r8, [sp, #6]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:204
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  76:	f88d 3007 	strb.w	r3, [sp, #7]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:205
    GPIO_Init(GPIO_LED, &GPIO_InitStructure);
  7a:	f7ff fffe 	bl	0 <GPIO_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:206
}
  7e:	e8bd 817e 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r8, pc}
  82:	46c0      	nop			(mov r8, r8)
  84:	40010800 	.word	0x40010800
  88:	40010c00 	.word	0x40010c00
Disassembly of section .text.NVIC_Configuration:

00000000 <NVIC_Configuration>:
NVIC_Configuration():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:140
{ 
  SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
}

void NVIC_Configuration(void)
{ 
   0:	b573      	push	{r0, r1, r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:144
    NVIC_InitTypeDef NVIC_InitStructure;

    /* Set the Vector Table base location at 0x08000000 */ 
    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);   
   2:	2100      	movs	r1, #0
   4:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
   8:	f7ff fffe 	bl	0 <NVIC_Configuration>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:154
    /* Enable the EXTI0 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
   c:	ae01      	add	r6, sp, #4
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:147

    /* Set the Vector Table base location at 0x08000000 */ 
    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);   

    /* Configure one bit for preemption priority */
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
   e:	f44f 60e0 	mov.w	r0, #1792	; 0x700
  12:	f7ff fffe 	bl	0 <NVIC_PriorityGroupConfig>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:151

    /* Enable the EXTI0 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
  16:	2500      	movs	r5, #0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:150

    /* Configure one bit for preemption priority */
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);

    /* Enable the EXTI0 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
  18:	2306      	movs	r3, #6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:153
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  1a:	2401      	movs	r4, #1
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:154
    NVIC_Init(&NVIC_InitStructure);
  1c:	4630      	mov	r0, r6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:150

    /* Configure one bit for preemption priority */
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);

    /* Enable the EXTI0 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
  1e:	f88d 3004 	strb.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:151
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
  22:	f88d 5005 	strb.w	r5, [sp, #5]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:152
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
  26:	f88d 5006 	strb.w	r5, [sp, #6]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:153
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  2a:	f88d 4007 	strb.w	r4, [sp, #7]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:154
    NVIC_Init(&NVIC_InitStructure);
  2e:	f7ff fffe 	bl	0 <NVIC_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:157

    /* Enable the EXTI1 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = EXTI1_IRQn;
  32:	2307      	movs	r3, #7
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:161
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
  34:	4630      	mov	r0, r6
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:157
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);

    /* Enable the EXTI1 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = EXTI1_IRQn;
  36:	f88d 3004 	strb.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:158
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
  3a:	f88d 5005 	strb.w	r5, [sp, #5]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:159
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
  3e:	f88d 4006 	strb.w	r4, [sp, #6]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:160
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  42:	f88d 4007 	strb.w	r4, [sp, #7]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:161
    NVIC_Init(&NVIC_InitStructure);
  46:	f7ff fffe 	bl	0 <NVIC_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:162
}
  4a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
Disassembly of section .text.USART1_Init:

00000000 <USART1_Init>:
USART1_Init():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:52
 * Input  : None
 * Output : None
 * Return : None
 */
void USART1_Init(void)
{
   0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:73
    USART_InitStructure.USART_HardwareFlowControl
                                         = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;

    /* Configure the USARTx */ 
    USART_Init(USART1, &USART_InitStructure);
   2:	4c0e      	ldr	r4, [pc, #56]	(3c <USART1_Init+0x3c>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:64
     - One Stop Bit
     - No parity
     - Hardware flow control disabled (RTS and CTS signals)
     - Receive and transmit enabled
     */
    USART_InitStructure.USART_BaudRate   = 115200;
   4:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   8:	9300      	str	r3, [sp, #0]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:65
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
   a:	f5a3 33e1 	sub.w	r3, r3, #115200	; 0x1c200
   e:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:66
    USART_InitStructure.USART_StopBits   = USART_StopBits_1;
  12:	f8ad 3006 	strh.w	r3, [sp, #6]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:67
    USART_InitStructure.USART_Parity     = USART_Parity_No ;
  16:	f8ad 3008 	strh.w	r3, [sp, #8]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:68
    USART_InitStructure.USART_HardwareFlowControl
  1a:	f8ad 300c 	strh.w	r3, [sp, #12]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:73
                                         = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;

    /* Configure the USARTx */ 
    USART_Init(USART1, &USART_InitStructure);
  1e:	4620      	mov	r0, r4
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:70
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits   = USART_StopBits_1;
    USART_InitStructure.USART_Parity     = USART_Parity_No ;
    USART_InitStructure.USART_HardwareFlowControl
                                         = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;
  20:	f04f 030c 	mov.w	r3, #12	; 0xc
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:73

    /* Configure the USARTx */ 
    USART_Init(USART1, &USART_InitStructure);
  24:	4669      	mov	r1, sp
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:70
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits   = USART_StopBits_1;
    USART_InitStructure.USART_Parity     = USART_Parity_No ;
    USART_InitStructure.USART_HardwareFlowControl
                                         = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;
  26:	f8ad 300a 	strh.w	r3, [sp, #10]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:73

    /* Configure the USARTx */ 
    USART_Init(USART1, &USART_InitStructure);
  2a:	f7ff fffe 	bl	0 <USART_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:76

    /* Enable the USART1 */
    USART1->CR1 |= CR1_UE_Set;
  2e:	89a3      	ldrh	r3, [r4, #12]
  30:	b29b      	uxth	r3, r3
  32:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  36:	81a3      	strh	r3, [r4, #12]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/hw_config.c:77
}
  38:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
  3a:	46c0      	nop			(mov r8, r8)
  3c:	40013800 	.word	0x40013800
