
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\project\RIDE\obj\main.o:     file format elf32-littlearm
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\project\RIDE\obj\main.o

Disassembly of section .text.DELAY_Test:

00000000 <DELAY_Test>:
DELAY_Test():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:33
    printf("PCLK2_Frequency = %d\n",rcc_clocks.PCLK2_Frequency );
    printf("ADCCLK_Frequency = %d\n",rcc_clocks.ADCCLK_Frequency );
}

void DELAY_Test(void)
{
   0:	b510      	push	{r4, lr}
   2:	2400      	movs	r4, #0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:36
    uint32_t i;

    for(i=0; i<50; i++)
   4:	3401      	adds	r4, #1
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:38
    {
        delay_1_second();
   6:	f7ff fffe 	bl	0 <delay_1_second>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:36

void DELAY_Test(void)
{
    uint32_t i;

    for(i=0; i<50; i++)
   a:	2c32      	cmp	r4, #50
   c:	d1fa      	bne.n	4 <DELAY_Test+0x4>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:41
    {
        delay_1_second();
    }

    printf("DELAY_Test done !!\n");
   e:	4802      	ldr	r0, [pc, #8]	(18 <DELAY_Test+0x18>)
  10:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:42
}
  14:	bd10      	pop	{r4, pc}
  16:	46c0      	nop			(mov r8, r8)
  18:	00000000 	.word	0x00000000
Disassembly of section .text.System_Information:

00000000 <System_Information>:
System_Information():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:23
RCC_ClocksTypeDef  rcc_clocks;

void System_Information()
{

    printf("StartUpCounter : %d\n", StartUpCounter);
   0:	4b0d      	ldr	r3, [pc, #52]	(38 <System_Information+0x38>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:21
extern __IO uint32_t StartUpCounter;

RCC_ClocksTypeDef  rcc_clocks;

void System_Information()
{
   2:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:25

    printf("StartUpCounter : %d\n", StartUpCounter);

    printf("SYSCLK_Frequency = %d\n",rcc_clocks.SYSCLK_Frequency );
   4:	4c0d      	ldr	r4, [pc, #52]	(3c <System_Information+0x3c>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:23
RCC_ClocksTypeDef  rcc_clocks;

void System_Information()
{

    printf("StartUpCounter : %d\n", StartUpCounter);
   6:	6819      	ldr	r1, [r3, #0]
   8:	480d      	ldr	r0, [pc, #52]	(40 <System_Information+0x40>)
   a:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:25

    printf("SYSCLK_Frequency = %d\n",rcc_clocks.SYSCLK_Frequency );
   e:	6821      	ldr	r1, [r4, #0]
  10:	480c      	ldr	r0, [pc, #48]	(44 <System_Information+0x44>)
  12:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:26
    printf("HCLK_Frequency = %d\n",rcc_clocks.HCLK_Frequency );
  16:	6861      	ldr	r1, [r4, #4]
  18:	480b      	ldr	r0, [pc, #44]	(48 <System_Information+0x48>)
  1a:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:27
    printf("PCLK1_Frequency = %d\n",rcc_clocks.PCLK1_Frequency );
  1e:	68a1      	ldr	r1, [r4, #8]
  20:	480a      	ldr	r0, [pc, #40]	(4c <System_Information+0x4c>)
  22:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:28
    printf("PCLK2_Frequency = %d\n",rcc_clocks.PCLK2_Frequency );
  26:	68e1      	ldr	r1, [r4, #12]
  28:	4809      	ldr	r0, [pc, #36]	(50 <System_Information+0x50>)
  2a:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:29
    printf("ADCCLK_Frequency = %d\n",rcc_clocks.ADCCLK_Frequency );
  2e:	6921      	ldr	r1, [r4, #16]
  30:	4808      	ldr	r0, [pc, #32]	(54 <System_Information+0x54>)
  32:	f7ff fffe 	bl	0 <printf>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:30
}
  36:	bd10      	pop	{r4, pc}
	...
  40:	00000013 	.word	0x00000013
  44:	00000028 	.word	0x00000028
  48:	0000003f 	.word	0x0000003f
  4c:	00000054 	.word	0x00000054
  50:	0000006a 	.word	0x0000006a
  54:	00000080 	.word	0x00000080
Disassembly of section .text.main:

00000000 <main>:
main():
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:51
 * Input  : None
 * Output : None
 * Return : None
 */
int main(void)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:55
    uint8_t ch;

    /* System Clocks Configuration */
    RCC_Configuration();
   2:	f7ff fffe 	bl	0 <RCC_Configuration>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:57

    RCC->APB2ENR |= RCC_APB2Periph_GPIOA;
   6:	4a32      	ldr	r2, [pc, #200]	(d0 <main+0xd0>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:61
    RCC->APB2ENR |= RCC_APB2Periph_GPIOB;
    RCC->APB2ENR |= RCC_APB2Periph_USART1;

    RCC_GetClocksFreq(&rcc_clocks);
   8:	4c32      	ldr	r4, [pc, #200]	(d4 <main+0xd4>)
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:57
    uint8_t ch;

    /* System Clocks Configuration */
    RCC_Configuration();

    RCC->APB2ENR |= RCC_APB2Periph_GPIOA;
   a:	6993      	ldr	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:61
    RCC->APB2ENR |= RCC_APB2Periph_GPIOB;
    RCC->APB2ENR |= RCC_APB2Periph_USART1;

    RCC_GetClocksFreq(&rcc_clocks);
   c:	4620      	mov	r0, r4
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:57
    uint8_t ch;

    /* System Clocks Configuration */
    RCC_Configuration();

    RCC->APB2ENR |= RCC_APB2Periph_GPIOA;
   e:	f043 0304 	orr.w	r3, r3, #4	; 0x4
  12:	6193      	str	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:58
    RCC->APB2ENR |= RCC_APB2Periph_GPIOB;
  14:	6993      	ldr	r3, [r2, #24]
  16:	f043 0308 	orr.w	r3, r3, #8	; 0x8
  1a:	6193      	str	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:59
    RCC->APB2ENR |= RCC_APB2Periph_USART1;
  1c:	6993      	ldr	r3, [r2, #24]
  1e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  22:	6193      	str	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:61

    RCC_GetClocksFreq(&rcc_clocks);
  24:	f7ff fffe 	bl	0 <RCC_GetClocksFreq>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:64

    /* NVIC configuration */
    NVIC_Configuration();
  28:	f7ff fffe 	bl	0 <NVIC_Configuration>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:67

    /* Configure the GPIO ports */
    GPIO_Configuration();
  2c:	f7ff fffe 	bl	0 <GPIO_Configuration>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:70

    /* EXTI configuration */
    EXTI_Configuration();
  30:	f7ff fffe 	bl	0 <EXTI_Configuration>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:73

    /* UART initialization */
    USART1_Init();
  34:	f7ff fffe 	bl	0 <USART1_Init>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:76

    /* Setup SysTick Timer for 1 msec interrupts  */
    if (SysTick_Config(rcc_clocks.SYSCLK_Frequency / 1000))
  38:	6823      	ldr	r3, [r4, #0]
  3a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  3e:	fbb3 f0f0 	udiv	r0, r3, r0
  42:	f7ff fffe 	bl	0 <SysTick_Config>
  46:	b100      	cbz	r0, 4a <main+0x4a>
  48:	e7fe      	b.n	48 <main+0x48>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:84
        while (1);
    }

    while(1)
    {
        printf("\n---------------------\n");
  4a:	4823      	ldr	r0, [pc, #140]	(d8 <main+0xd8>)
  4c:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:85
        printf("Press menu key\n");
  50:	4822      	ldr	r0, [pc, #136]	(8c <puts+0x8c>)
  52:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:86
        printf("---------------------\n");
  56:	4822      	ldr	r0, [pc, #136]	(8c <puts+0x8c>)
  58:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:87
        printf("0> System Information\n");
  5c:	4821      	ldr	r0, [pc, #132]	(88 <puts+0x88>)
  5e:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:88
        printf("---------------------\n");
  62:	481f      	ldr	r0, [pc, #124]	(80 <puts+0x80>)
  64:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:89
        printf("1> LED Test\n");
  68:	481f      	ldr	r0, [pc, #124]	(80 <puts+0x80>)
  6a:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:90
        printf("2> KEY Test\n");
  6e:	481f      	ldr	r0, [pc, #124]	(80 <puts+0x80>)
  70:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:91
        printf("3> 7-Segment Test\n");
  74:	481e      	ldr	r0, [pc, #120]	(7c <puts+0x7c>)
  76:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:92
        printf("4> 1 sec Delay Test\n");
  7a:	481e      	ldr	r0, [pc, #120]	(7c <puts+0x7c>)
  7c:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:93
        printf("---------------------\n");
  80:	4817      	ldr	r0, [pc, #92]	(60 <puts+0x60>)
  82:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:94
        printf("x> quit\n\n");
  86:	481c      	ldr	r0, [pc, #112]	(74 <puts+0x74>)
  88:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:96

        ch = USART_GetCharacter(USART1);
  8c:	481b      	ldr	r0, [pc, #108]	(70 <USART_GetCharacter+0x70>)
  8e:	f7ff fffe 	bl	0 <USART_GetCharacter>
  92:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:97
        printf(" is selected\n\n");
  94:	481a      	ldr	r0, [pc, #104]	(100 <main+0x100>)
  96:	f7ff fffe 	bl	0 <puts>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:99

        switch((char)ch)
  9a:	b263      	sxtb	r3, r4
  9c:	3b30      	subs	r3, #48
  9e:	2b04      	cmp	r3, #4
  a0:	d812      	bhi.n	c8 <main+0xc8>
  a2:	e8df f003 	tbb	[pc, r3]
  a6:	0603      	.short	0x0603
  a8:	000f0c09 	.word	0x000f0c09
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:102
        {
        case '0':
            System_Information();
  ac:	f7ff fffe 	bl	0 <main>
  b0:	e00a      	b.n	18 <LED_Test+0x18>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:106
            break;

        case '1':
            LED_Test();
  b2:	f7ff fffe 	bl	0 <LED_Test>
  b6:	e007      	b.n	12 <KEY_Test+0x12>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:110
            break;

        case '2':
            KEY_Test();
  b8:	f7ff fffe 	bl	0 <KEY_Test>
  bc:	e004      	b.n	c <Seven_Segment_Test+0xc>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:114
            break;

        case '3':
            Seven_Segment_Test();
  be:	f7ff fffe 	bl	0 <Seven_Segment_Test>
  c2:	e001      	b.n	6 <main+0x6>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:118
            break;

        case '4':
            DELAY_Test();
  c4:	f7ff fffe 	bl	0 <main>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:122
            break;
        }

        if('x' == (char)ch)
  c8:	2c78      	cmp	r4, #120
  ca:	d1be      	bne.n	4a <main+0x4a>
D:\WkPjt\MStory2.0\Mango-M32.Firmware\M32.Src016.KeyInterrupt\src/main.c:127
        {
            break;
        }
    }
}
  cc:	bd10      	pop	{r4, pc}
  ce:	46c0      	nop			(mov r8, r8)
  d0:	40021000 	.word	0x40021000
  d4:	00000000 	.word	0x00000000
  d8:	00000097 	.word	0x00000097
  dc:	000000ae 	.word	0x000000ae
  e0:	000000bd 	.word	0x000000bd
  e4:	000000d3 	.word	0x000000d3
  e8:	000000e9 	.word	0x000000e9
  ec:	000000f5 	.word	0x000000f5
  f0:	00000101 	.word	0x00000101
  f4:	00000113 	.word	0x00000113
  f8:	00000127 	.word	0x00000127
  fc:	40013800 	.word	0x40013800
 100:	00000130 	.word	0x00000130
