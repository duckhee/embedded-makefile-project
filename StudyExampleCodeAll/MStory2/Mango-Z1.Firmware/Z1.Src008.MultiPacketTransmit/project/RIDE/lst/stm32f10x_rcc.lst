
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Z1.Src007.1ByteTxRx\project\RIDE\obj\stm32f10x_rcc.o:     file format elf32-littlearm
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Z1.Src007.1ByteTxRx\project\RIDE\obj\stm32f10x_rcc.o

Disassembly of section .text.RCC_DeInit:

00000000 <RCC_DeInit>:
RCC_DeInit():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:227
  * @retval None
  */
void RCC_DeInit(void)
{
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
   0:	4a0d      	ldr	r2, [pc, #52]	(38 <RCC_DeInit+0x38>)
   2:	6813      	ldr	r3, [r2, #0]
   4:	f043 0301 	orr.w	r3, r3, #1	; 0x1
   8:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:231

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#ifndef STM32F10X_CL
  RCC->CFGR &= (uint32_t)0xF8FF0000;
   a:	6851      	ldr	r1, [r2, #4]
   c:	4b0b      	ldr	r3, [pc, #44]	(3c <RCC_DeInit+0x3c>)
   e:	ea01 0303 	and.w	r3, r1, r3
  12:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:237
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
  14:	6813      	ldr	r3, [r2, #0]
  16:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
  1a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  1e:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:240

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
  20:	6813      	ldr	r3, [r2, #0]
  22:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
  26:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:243

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
  28:	6853      	ldr	r3, [r2, #4]
  2a:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
  2e:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:247

#ifndef STM32F10X_CL
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
  30:	f44f 031f 	mov.w	r3, #10420224	; 0x9f0000
  34:	6093      	str	r3, [r2, #8]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:258
  RCC->CIR = 0x00FF0000;

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;
#endif /* STM32F10X_CL */
}
  36:	4770      	bx	lr
  38:	40021000 	.word	0x40021000
  3c:	f8ff0000 	.word	0xf8ff0000
Disassembly of section .text.RCC_GetSYSCLKSource:

00000000 <RCC_GetSYSCLKSource>:
RCC_GetSYSCLKSource():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:585
  *     - 0x04: HSE used as system clock
  *     - 0x08: PLL used as system clock
  */
uint8_t RCC_GetSYSCLKSource(void)
{
  return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
   0:	4b02      	ldr	r3, [pc, #8]	(c <RCC_GetSYSCLKSource+0xc>)
   2:	6858      	ldr	r0, [r3, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:586
}
   4:	f000 000c 	and.w	r0, r0, #12	; 0xc
   8:	4770      	bx	lr
   a:	46c0      	nop			(mov r8, r8)
   c:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_GetClocksFreq:

00000000 <RCC_GetClocksFreq>:
RCC_GetClocksFreq():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:903
  * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
  *   the clocks frequencies.
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:911
#ifdef  STM32F10X_CL
  uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
#endif /* STM32F10X_CL */
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & CFGR_SWS_Mask;
   4:	481e      	ldr	r0, [pc, #120]	(80 <RCC_GetClocksFreq+0x80>)
   6:	6843      	ldr	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:913
  
  switch (tmp)
   8:	f003 030c 	and.w	r3, r3, #12	; 0xc
   c:	2b04      	cmp	r3, #4
   e:	d002      	beq.n	16 <RCC_GetClocksFreq+0x16>
  10:	2b08      	cmp	r3, #8
  12:	d114      	bne.n	3e <RCC_GetClocksFreq+0x3e>
  14:	e001      	b.n	1a <RCC_GetClocksFreq+0x1a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:919
  {
    case 0x00:  /* HSI used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
      break;
    case 0x04:  /* HSE used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSE_Value;
  16:	4b1b      	ldr	r3, [pc, #108]	(84 <RCC_GetClocksFreq+0x84>)
  18:	e012      	b.n	40 <RCC_GetClocksFreq+0x40>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:924
      break;
    case 0x08:  /* PLL used as system clock */

      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
  1a:	6843      	ldr	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:925
      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
  1c:	6842      	ldr	r2, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:928
      
#ifndef STM32F10X_CL      
      pllmull = ( pllmull >> 18) + 2;
  1e:	f3c3 4383 	ubfx	r3, r3, #18, #4
  22:	1c99      	adds	r1, r3, #2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:930
      
      if (pllsource == 0x00)
  24:	f412 3f80 	tst.w	r2, #65536	; 0x10000
  28:	d101      	bne.n	2e <RCC_GetClocksFreq+0x2e>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:932
      {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
        RCC_Clocks->SYSCLK_Frequency = (HSI_Value >> 1) * pllmull;
  2a:	4b17      	ldr	r3, [pc, #92]	(88 <RCC_GetClocksFreq+0x88>)
  2c:	e005      	b.n	3a <RCC_GetClocksFreq+0x3a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:936
      }
      else
      {/* HSE selected as PLL clock entry */
        if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
  2e:	6843      	ldr	r3, [r0, #4]
  30:	f413 3f00 	tst.w	r3, #131072	; 0x20000
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:938
        {/* HSE oscillator clock divided by 2 */
          RCC_Clocks->SYSCLK_Frequency = (HSE_Value >> 1) * pllmull;
  34:	bf14      	ite	ne
  36:	4b15      	ldrne	r3, [pc, #84]	(8c <RCC_GetClocksFreq+0x8c>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:942
        }
        else
        {
          RCC_Clocks->SYSCLK_Frequency = HSE_Value * pllmull;
  38:	4b12      	ldreq	r3, [pc, #72]	(84 <RCC_GetClocksFreq+0x84>)
  3a:	434b      	muls	r3, r1
  3c:	e000      	b.n	40 <RCC_GetClocksFreq+0x40>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:985
      }
#endif /* STM32F10X_CL */ 
      break;

    default:
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
  3e:	4b14      	ldr	r3, [pc, #80]	(90 <RCC_GetClocksFreq+0x90>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:991
      break;
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
  40:	480f      	ldr	r0, [pc, #60]	(80 <RCC_GetClocksFreq+0x80>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:985
      }
#endif /* STM32F10X_CL */ 
      break;

    default:
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
  42:	6023      	str	r3, [r4, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:991
      break;
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
  44:	6843      	ldr	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:993
  tmp = tmp >> 4;
  presc = APBAHBPrescTable[tmp];
  46:	4913      	ldr	r1, [pc, #76]	(94 <RCC_GetClocksFreq+0x94>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:992
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
  tmp = tmp >> 4;
  48:	f3c3 1303 	ubfx	r3, r3, #4, #4
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:993
  presc = APBAHBPrescTable[tmp];
  4c:	5ccb      	ldrb	r3, [r1, r3]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:995
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
  4e:	6822      	ldr	r2, [r4, #0]
  50:	40da      	lsrs	r2, r3
  52:	6062      	str	r2, [r4, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:997
  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
  54:	6843      	ldr	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:998
  tmp = tmp >> 8;
  56:	f3c3 2302 	ubfx	r3, r3, #8, #3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:999
  presc = APBAHBPrescTable[tmp];
  5a:	5ccb      	ldrb	r3, [r1, r3]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1001
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
  5c:	fa32 f303 	lsrs.w	r3, r2, r3
  60:	60a3      	str	r3, [r4, #8]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1003
  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
  62:	6843      	ldr	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1004
  tmp = tmp >> 11;
  64:	f3c3 23c2 	ubfx	r3, r3, #11, #3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1005
  presc = APBAHBPrescTable[tmp];
  68:	5ccb      	ldrb	r3, [r1, r3]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1007
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
  6a:	40da      	lsrs	r2, r3
  6c:	60e2      	str	r2, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1009
  /* Get ADCCLK prescaler */
  tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
  6e:	6843      	ldr	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1010
  tmp = tmp >> 14;
  70:	f3c3 3381 	ubfx	r3, r3, #14, #2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1011
  presc = ADCPrescTable[tmp];
  74:	18c9      	adds	r1, r1, r3
  76:	7c0b      	ldrb	r3, [r1, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1013
  /* ADCCLK clock frequency */
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
  78:	fbb2 f2f3 	udiv	r2, r2, r3
  7c:	6122      	str	r2, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1014
}
  7e:	bd10      	pop	{r4, pc}
  80:	40021000 	.word	0x40021000
  84:	00b71b00 	.word	0x00b71b00
  88:	003d0900 	.word	0x003d0900
  8c:	005b8d80 	.word	0x005b8d80
  90:	007a1200 	.word	0x007a1200
  94:	00000000 	.word	0x00000000
Disassembly of section .text.RCC_ClearFlag:

00000000 <RCC_ClearFlag>:
RCC_ClearFlag():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1351
  * @retval None
  */
void RCC_ClearFlag(void)
{
  /* Set RMVF bit to clear the reset flags */
  RCC->CSR |= CSR_RMVF_Set;
   0:	4a02      	ldr	r2, [pc, #8]	(c <RCC_ClearFlag+0xc>)
   2:	6a53      	ldr	r3, [r2, #36]
   4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   8:	6253      	str	r3, [r2, #36]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1352
}
   a:	4770      	bx	lr
   c:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_ClearITPendingBit:

00000000 <RCC_ClearITPendingBit>:
RCC_ClearITPendingBit():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1428
  * @retval None
  */
void RCC_ClearITPendingBit(uint8_t RCC_IT)
{
  /* Check the parameters */
  assert_param(IS_RCC_CLEAR_IT(RCC_IT));
   0:	f010 0f60 	tst.w	r0, #96	; 0x60
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1426
  *   
  *     @arg RCC_IT_CSS: Clock Security System interrupt
  * @retval None
  */
void RCC_ClearITPendingBit(uint8_t RCC_IT)
{
   4:	b510      	push	{r4, lr}
   6:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1428
  /* Check the parameters */
  assert_param(IS_RCC_CLEAR_IT(RCC_IT));
   8:	d100      	bne.n	c <RCC_ClearITPendingBit+0xc>
   a:	b920      	cbnz	r0, 16 <RCC_ClearITPendingBit+0x16>
   c:	4803      	ldr	r0, [pc, #12]	(1c <RCC_ClearITPendingBit+0x1c>)
   e:	f240 5194 	movw	r1, #1428	; 0x594
  12:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1432

  /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
     pending bits */
  *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
  16:	4b02      	ldr	r3, [pc, #8]	(20 <RCC_ClearITPendingBit+0x20>)
  18:	701c      	strb	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1433
}
  1a:	bd10      	pop	{r4, pc}
  1c:	00000000 	.word	0x00000000
  20:	4002100a 	.word	0x4002100a
Disassembly of section .text.RCC_GetITStatus:

00000000 <RCC_GetITStatus>:
RCC_GetITStatus():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1383
  */
ITStatus RCC_GetITStatus(uint8_t RCC_IT)
{
  ITStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_RCC_GET_IT(RCC_IT));
   0:	1e43      	subs	r3, r0, #1
   2:	b2db      	uxtb	r3, r3
   4:	2b01      	cmp	r3, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1380
  *     @arg RCC_IT_CSS: Clock Security System interrupt
  *   
  * @retval The new state of RCC_IT (SET or RESET).
  */
ITStatus RCC_GetITStatus(uint8_t RCC_IT)
{
   6:	b510      	push	{r4, lr}
   8:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1383
  ITStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_RCC_GET_IT(RCC_IT));
   a:	d90c      	bls.n	26 <RCC_GetITStatus+0x26>
   c:	2804      	cmp	r0, #4
   e:	d00a      	beq.n	26 <RCC_GetITStatus+0x26>
  10:	2808      	cmp	r0, #8
  12:	d008      	beq.n	26 <RCC_GetITStatus+0x26>
  14:	2810      	cmp	r0, #16
  16:	d006      	beq.n	26 <RCC_GetITStatus+0x26>
  18:	2880      	cmp	r0, #128
  1a:	d004      	beq.n	26 <RCC_GetITStatus+0x26>
  1c:	4805      	ldr	r0, [pc, #20]	(34 <RCC_GetITStatus+0x34>)
  1e:	f240 5167 	movw	r1, #1383	; 0x567
  22:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1386

  /* Check the status of the specified RCC interrupt */
  if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
  26:	4b04      	ldr	r3, [pc, #16]	(38 <RCC_GetITStatus+0x38>)
  28:	689b      	ldr	r3, [r3, #8]
  2a:	421c      	tst	r4, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1397
    bitstatus = RESET;
  }

  /* Return the RCC_IT status */
  return  bitstatus;
}
  2c:	bf0c      	ite	eq
  2e:	2000      	moveq	r0, #0
  30:	2001      	movne	r0, #1
  32:	bd10      	pop	{r4, pc}
  34:	00000000 	.word	0x00000000
  38:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_GetFlagStatus:

00000000 <RCC_GetFlagStatus>:
RCC_GetFlagStatus():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1309
{
  uint32_t tmp = 0;
  uint32_t statusreg = 0;
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_RCC_FLAG(RCC_FLAG));
   0:	2821      	cmp	r0, #33
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1304
  *     @arg RCC_FLAG_LPWRRST: Low Power reset
  *   
  * @retval The new state of RCC_FLAG (SET or RESET).
  */
FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1309
  uint32_t tmp = 0;
  uint32_t statusreg = 0;
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_RCC_FLAG(RCC_FLAG));
   6:	d018      	beq.n	3a <RCC_GetFlagStatus+0x3a>
   8:	2831      	cmp	r0, #49
   a:	d016      	beq.n	3a <RCC_GetFlagStatus+0x3a>
   c:	2839      	cmp	r0, #57
   e:	d014      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  10:	2841      	cmp	r0, #65
  12:	d012      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  14:	2861      	cmp	r0, #97
  16:	d010      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  18:	287a      	cmp	r0, #122
  1a:	d00e      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  1c:	287b      	cmp	r0, #123
  1e:	d00c      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  20:	287c      	cmp	r0, #124
  22:	d00a      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  24:	287d      	cmp	r0, #125
  26:	d008      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  28:	287e      	cmp	r0, #126
  2a:	d006      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  2c:	287f      	cmp	r0, #127
  2e:	d004      	beq.n	3a <RCC_GetFlagStatus+0x3a>
  30:	480b      	ldr	r0, [pc, #44]	(60 <RCC_GetFlagStatus+0x60>)
  32:	f240 511d 	movw	r1, #1309	; 0x51d
  36:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1312

  /* Get the RCC register index */
  tmp = RCC_FLAG >> 5;
  3a:	0963      	lsrs	r3, r4, #5
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1313
  if (tmp == 1)               /* The flag to check is in CR register */
  3c:	2b01      	cmp	r3, #1
  3e:	d102      	bne.n	46 <RCC_GetFlagStatus+0x46>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1315
  {
    statusreg = RCC->CR;
  40:	4b08      	ldr	r3, [pc, #32]	(64 <RCC_GetFlagStatus+0x64>)
  42:	681b      	ldr	r3, [r3, #0]
  44:	e005      	b.n	52 <RCC_GetFlagStatus+0x52>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1317
  }
  else if (tmp == 2)          /* The flag to check is in BDCR register */
  46:	2b02      	cmp	r3, #2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1319
  {
    statusreg = RCC->BDCR;
  48:	bf0b      	itete	eq
  4a:	4b06      	ldreq	r3, [pc, #24]	(64 <RCC_GetFlagStatus+0x64>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1323
  }
  else                       /* The flag to check is in CSR register */
  {
    statusreg = RCC->CSR;
  4c:	4b05      	ldrne	r3, [pc, #20]	(64 <RCC_GetFlagStatus+0x64>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1319
  {
    statusreg = RCC->CR;
  }
  else if (tmp == 2)          /* The flag to check is in BDCR register */
  {
    statusreg = RCC->BDCR;
  4e:	6a1b      	ldreq	r3, [r3, #32]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1323
  }
  else                       /* The flag to check is in CSR register */
  {
    statusreg = RCC->CSR;
  50:	6a5b      	ldrne	r3, [r3, #36]
  52:	f004 001f 	and.w	r0, r4, #31	; 0x1f
  56:	fa33 f000 	lsrs.w	r0, r3, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1339
    bitstatus = RESET;
  }

  /* Return the flag status */
  return bitstatus;
}
  5a:	f000 0001 	and.w	r0, r0, #1	; 0x1
  5e:	bd10      	pop	{r4, pc}
  60:	00000000 	.word	0x00000000
  64:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_WaitForHSEStartUp:

00000000 <RCC_WaitForHSEStartUp>:
RCC_WaitForHSEStartUp():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:305
  * @retval An ErrorStatus enumuration value:
  * - SUCCESS: HSE oscillator is stable and ready to use
  * - ERROR: HSE oscillator not yet ready
  */
ErrorStatus RCC_WaitForHSEStartUp(void)
{
   0:	b507      	push	{r0, r1, r2, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:306
  __IO uint32_t StartUpCounter = 0;
   2:	2300      	movs	r3, #0
   4:	9301      	str	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:313
  FlagStatus HSEStatus = RESET;
  
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
   6:	2031      	movs	r0, #49
   8:	f7ff fffe 	bl	0 <RCC_WaitForHSEStartUp>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:314
    StartUpCounter++;  
   c:	9b01      	ldr	r3, [sp, #4]
   e:	3301      	adds	r3, #1
  10:	9301      	str	r3, [sp, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:315
  } while((StartUpCounter != HSEStartUp_TimeOut) && (HSEStatus == RESET));
  12:	9b01      	ldr	r3, [sp, #4]
  14:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
  18:	d001      	beq.n	1e <RCC_WaitForHSEStartUp+0x1e>
  1a:	2800      	cmp	r0, #0
  1c:	d0f3      	beq.n	6 <RCC_WaitForHSEStartUp+0x6>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:317
  
  if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
  1e:	2031      	movs	r0, #49
  20:	f7ff fffe 	bl	0 <RCC_WaitForHSEStartUp>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:326
  else
  {
    status = ERROR;
  }  
  return (status);
}
  24:	3800      	subs	r0, #0
  26:	bf18      	it	ne
  28:	2001      	movne	r0, #1
  2a:	bd0e      	pop	{r1, r2, r3, pc}
Disassembly of section .text.RCC_MCOConfig:

00000000 <RCC_MCOConfig>:
RCC_MCOConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1260
  *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
  *   
  * @retval None
  */
void RCC_MCOConfig(uint8_t RCC_MCO)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1262
  /* Check the parameters */
  assert_param(IS_RCC_MCO(RCC_MCO));
   2:	4604      	mov	r4, r0
   4:	b160      	cbz	r0, 20 <RCC_MCOConfig+0x20>
   6:	2805      	cmp	r0, #5
   8:	d00a      	beq.n	20 <RCC_MCOConfig+0x20>
   a:	2804      	cmp	r0, #4
   c:	d008      	beq.n	20 <RCC_MCOConfig+0x20>
   e:	2806      	cmp	r0, #6
  10:	d006      	beq.n	20 <RCC_MCOConfig+0x20>
  12:	2807      	cmp	r0, #7
  14:	d004      	beq.n	20 <RCC_MCOConfig+0x20>
  16:	4804      	ldr	r0, [pc, #16]	(28 <RCC_MCOConfig+0x28>)
  18:	f240 41ee 	movw	r1, #1262	; 0x4ee
  1c:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1265

  /* Perform Byte access to MCO bits to select the MCO source */
  *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
  20:	4b02      	ldr	r3, [pc, #8]	(2c <RCC_MCOConfig+0x2c>)
  22:	701c      	strb	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1266
}
  24:	bd10      	pop	{r4, pc}
  26:	46c0      	nop			(mov r8, r8)
  28:	00000000 	.word	0x00000000
  2c:	40021007 	.word	0x40021007
Disassembly of section .text.RCC_ClockSecuritySystemCmd:

00000000 <RCC_ClockSecuritySystemCmd>:
RCC_ClockSecuritySystemCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1230
  * @retval None
  */
void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   0:	2801      	cmp	r0, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1228
  * @param  NewState: new state of the Clock Security System..
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1230
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   6:	d904      	bls.n	12 <RCC_ClockSecuritySystemCmd+0x12>
   8:	4803      	ldr	r0, [pc, #12]	(18 <RCC_ClockSecuritySystemCmd+0x18>)
   a:	f240 41ce 	movw	r1, #1230	; 0x4ce
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1231
  *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
  12:	4b02      	ldr	r3, [pc, #8]	(1c <RCC_ClockSecuritySystemCmd+0x1c>)
  14:	601c      	str	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1232
}
  16:	bd10      	pop	{r4, pc}
  18:	00000000 	.word	0x00000000
  1c:	4242004c 	.word	0x4242004c
Disassembly of section .text.RCC_BackupResetCmd:

00000000 <RCC_BackupResetCmd>:
RCC_BackupResetCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1217
  * @retval None
  */
void RCC_BackupResetCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   0:	2801      	cmp	r0, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1215
  * @param  NewState: new state of the Backup domain reset.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_BackupResetCmd(FunctionalState NewState)
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1217
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   6:	d904      	bls.n	12 <RCC_BackupResetCmd+0x12>
   8:	4803      	ldr	r0, [pc, #12]	(18 <RCC_BackupResetCmd+0x18>)
   a:	f240 41c1 	movw	r1, #1217	; 0x4c1
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1218
  *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
  12:	4b02      	ldr	r3, [pc, #8]	(1c <RCC_BackupResetCmd+0x1c>)
  14:	601c      	str	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1219
}
  16:	bd10      	pop	{r4, pc}
  18:	00000000 	.word	0x00000000
  1c:	42420440 	.word	0x42420440
Disassembly of section .text.RCC_APB1PeriphResetCmd:

00000000 <RCC_APB1PeriphResetCmd>:
RCC_APB1PeriphResetCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1196
  * @retval None
  */
void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
   0:	4b0f      	ldr	r3, [pc, #60]	(40 <RCC_APB1PeriphResetCmd+0x40>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1194
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1196
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
   4:	ea00 0303 	and.w	r3, r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1194
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
   8:	4604      	mov	r4, r0
   a:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1196
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
   c:	b903      	cbnz	r3, 10 <RCC_APB1PeriphResetCmd+0x10>
   e:	b920      	cbnz	r0, 1a <RCC_APB1PeriphResetCmd+0x1a>
  10:	480c      	ldr	r0, [pc, #48]	(44 <RCC_APB1PeriphResetCmd+0x44>)
  12:	f240 41ac 	movw	r1, #1196	; 0x4ac
  16:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1197
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  1a:	2d01      	cmp	r5, #1
  1c:	d904      	bls.n	28 <RCC_APB1PeriphResetCmd+0x28>
  1e:	4809      	ldr	r0, [pc, #36]	(44 <RCC_APB1PeriphResetCmd+0x44>)
  20:	f240 41ad 	movw	r1, #1197	; 0x4ad
  24:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1198
  if (NewState != DISABLE)
  28:	b125      	cbz	r5, 34 <RCC_APB1PeriphResetCmd+0x34>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1200
  {
    RCC->APB1RSTR |= RCC_APB1Periph;
  2a:	4a07      	ldr	r2, [pc, #28]	(48 <RCC_APB1PeriphResetCmd+0x48>)
  2c:	6913      	ldr	r3, [r2, #16]
  2e:	ea44 0303 	orr.w	r3, r4, r3
  32:	e003      	b.n	3c <RCC_APB1PeriphResetCmd+0x3c>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1204
  }
  else
  {
    RCC->APB1RSTR &= ~RCC_APB1Periph;
  34:	4a04      	ldr	r2, [pc, #16]	(48 <RCC_APB1PeriphResetCmd+0x48>)
  36:	6913      	ldr	r3, [r2, #16]
  38:	ea23 0304 	bic.w	r3, r3, r4
  3c:	6113      	str	r3, [r2, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1206
  }
}
  3e:	bd70      	pop	{r4, r5, r6, pc}
  40:	c10137c0 	.word	0xc10137c0
  44:	00000000 	.word	0x00000000
  48:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_APB2PeriphResetCmd:

00000000 <RCC_APB2PeriphResetCmd>:
RCC_APB2PeriphResetCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1166
  * @retval None
  */
void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
   0:	4b0f      	ldr	r3, [pc, #60]	(40 <RCC_APB2PeriphResetCmd+0x40>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1164
  * @param  NewState: new state of the specified peripheral reset.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1166
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
   4:	ea00 0303 	and.w	r3, r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1164
  * @param  NewState: new state of the specified peripheral reset.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
   8:	4604      	mov	r4, r0
   a:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1166
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
   c:	b903      	cbnz	r3, 10 <RCC_APB2PeriphResetCmd+0x10>
   e:	b920      	cbnz	r0, 1a <RCC_APB2PeriphResetCmd+0x1a>
  10:	480c      	ldr	r0, [pc, #48]	(44 <RCC_APB2PeriphResetCmd+0x44>)
  12:	f240 418e 	movw	r1, #1166	; 0x48e
  16:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1167
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  1a:	2d01      	cmp	r5, #1
  1c:	d904      	bls.n	28 <RCC_APB2PeriphResetCmd+0x28>
  1e:	4809      	ldr	r0, [pc, #36]	(44 <RCC_APB2PeriphResetCmd+0x44>)
  20:	f240 418f 	movw	r1, #1167	; 0x48f
  24:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1168
  if (NewState != DISABLE)
  28:	b125      	cbz	r5, 34 <RCC_APB2PeriphResetCmd+0x34>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1170
  {
    RCC->APB2RSTR |= RCC_APB2Periph;
  2a:	4a07      	ldr	r2, [pc, #28]	(48 <RCC_APB2PeriphResetCmd+0x48>)
  2c:	68d3      	ldr	r3, [r2, #12]
  2e:	ea44 0303 	orr.w	r3, r4, r3
  32:	e003      	b.n	3c <RCC_APB2PeriphResetCmd+0x3c>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1174
  }
  else
  {
    RCC->APB2RSTR &= ~RCC_APB2Periph;
  34:	4a04      	ldr	r2, [pc, #16]	(48 <RCC_APB2PeriphResetCmd+0x48>)
  36:	68d3      	ldr	r3, [r2, #12]
  38:	ea23 0304 	bic.w	r3, r3, r4
  3c:	60d3      	str	r3, [r2, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1176
  }
}
  3e:	bd70      	pop	{r4, r5, r6, pc}
  40:	ffff0002 	.word	0xffff0002
  44:	00000000 	.word	0x00000000
  48:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_APB1PeriphClockCmd:

00000000 <RCC_APB1PeriphClockCmd>:
RCC_APB1PeriphClockCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1109
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
   0:	4b0f      	ldr	r3, [pc, #60]	(40 <RCC_APB1PeriphClockCmd+0x40>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1107
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1109
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
   4:	ea00 0303 	and.w	r3, r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1107
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
   8:	4604      	mov	r4, r0
   a:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1109
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
   c:	b903      	cbnz	r3, 10 <RCC_APB1PeriphClockCmd+0x10>
   e:	b920      	cbnz	r0, 1a <RCC_APB1PeriphClockCmd+0x1a>
  10:	480c      	ldr	r0, [pc, #48]	(44 <RCC_APB1PeriphClockCmd+0x44>)
  12:	f240 4155 	movw	r1, #1109	; 0x455
  16:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1110
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  1a:	2d01      	cmp	r5, #1
  1c:	d904      	bls.n	28 <RCC_APB1PeriphClockCmd+0x28>
  1e:	4809      	ldr	r0, [pc, #36]	(44 <RCC_APB1PeriphClockCmd+0x44>)
  20:	f240 4156 	movw	r1, #1110	; 0x456
  24:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1111
  if (NewState != DISABLE)
  28:	b125      	cbz	r5, 34 <RCC_APB1PeriphClockCmd+0x34>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1113
  {
    RCC->APB1ENR |= RCC_APB1Periph;
  2a:	4a07      	ldr	r2, [pc, #28]	(48 <RCC_APB1PeriphClockCmd+0x48>)
  2c:	69d3      	ldr	r3, [r2, #28]
  2e:	ea44 0303 	orr.w	r3, r4, r3
  32:	e003      	b.n	3c <RCC_APB1PeriphClockCmd+0x3c>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1117
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
  34:	4a04      	ldr	r2, [pc, #16]	(48 <RCC_APB1PeriphClockCmd+0x48>)
  36:	69d3      	ldr	r3, [r2, #28]
  38:	ea23 0304 	bic.w	r3, r3, r4
  3c:	61d3      	str	r3, [r2, #28]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1119
  }
}
  3e:	bd70      	pop	{r4, r5, r6, pc}
  40:	c10137c0 	.word	0xc10137c0
  44:	00000000 	.word	0x00000000
  48:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_APB2PeriphClockCmd:

00000000 <RCC_APB2PeriphClockCmd>:
RCC_APB2PeriphClockCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1079
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
   0:	4b0f      	ldr	r3, [pc, #60]	(40 <RCC_APB2PeriphClockCmd+0x40>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1077
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1079
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
   4:	ea00 0303 	and.w	r3, r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1077
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
   8:	4604      	mov	r4, r0
   a:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1079
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
   c:	b903      	cbnz	r3, 10 <RCC_APB2PeriphClockCmd+0x10>
   e:	b920      	cbnz	r0, 1a <RCC_APB2PeriphClockCmd+0x1a>
  10:	480c      	ldr	r0, [pc, #48]	(44 <RCC_APB2PeriphClockCmd+0x44>)
  12:	f240 4137 	movw	r1, #1079	; 0x437
  16:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1080
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  1a:	2d01      	cmp	r5, #1
  1c:	d904      	bls.n	28 <RCC_APB2PeriphClockCmd+0x28>
  1e:	4809      	ldr	r0, [pc, #36]	(44 <RCC_APB2PeriphClockCmd+0x44>)
  20:	f44f 6187 	mov.w	r1, #1080	; 0x438
  24:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1081
  if (NewState != DISABLE)
  28:	b125      	cbz	r5, 34 <RCC_APB2PeriphClockCmd+0x34>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1083
  {
    RCC->APB2ENR |= RCC_APB2Periph;
  2a:	4a07      	ldr	r2, [pc, #28]	(48 <RCC_APB2PeriphClockCmd+0x48>)
  2c:	6993      	ldr	r3, [r2, #24]
  2e:	ea44 0303 	orr.w	r3, r4, r3
  32:	e003      	b.n	3c <RCC_APB2PeriphClockCmd+0x3c>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1087
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
  34:	4a04      	ldr	r2, [pc, #16]	(48 <RCC_APB2PeriphClockCmd+0x48>)
  36:	6993      	ldr	r3, [r2, #24]
  38:	ea23 0304 	bic.w	r3, r3, r4
  3c:	6193      	str	r3, [r2, #24]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1089
  }
}
  3e:	bd70      	pop	{r4, r5, r6, pc}
  40:	ffff0002 	.word	0xffff0002
  44:	00000000 	.word	0x00000000
  48:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_AHBPeriphClockCmd:

00000000 <RCC_AHBPeriphClockCmd>:
RCC_AHBPeriphClockCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1050
  * @retval None
  */
void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
   0:	f420 63aa 	bic.w	r3, r0, #1360	; 0x550
   4:	f023 0307 	bic.w	r3, r3, #7	; 0x7
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1048
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
{
   8:	b570      	push	{r4, r5, r6, lr}
   a:	4604      	mov	r4, r0
   c:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1050
  /* Check the parameters */
  assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
   e:	b903      	cbnz	r3, 12 <RCC_AHBPeriphClockCmd+0x12>
  10:	b920      	cbnz	r0, 1c <RCC_AHBPeriphClockCmd+0x1c>
  12:	480c      	ldr	r0, [pc, #48]	(44 <RCC_AHBPeriphClockCmd+0x44>)
  14:	f240 411a 	movw	r1, #1050	; 0x41a
  18:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1051
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  1c:	2d01      	cmp	r5, #1
  1e:	d904      	bls.n	2a <RCC_AHBPeriphClockCmd+0x2a>
  20:	4808      	ldr	r0, [pc, #32]	(44 <RCC_AHBPeriphClockCmd+0x44>)
  22:	f240 411b 	movw	r1, #1051	; 0x41b
  26:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1053

  if (NewState != DISABLE)
  2a:	b125      	cbz	r5, 36 <RCC_AHBPeriphClockCmd+0x36>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1055
  {
    RCC->AHBENR |= RCC_AHBPeriph;
  2c:	4a06      	ldr	r2, [pc, #24]	(48 <RCC_AHBPeriphClockCmd+0x48>)
  2e:	6953      	ldr	r3, [r2, #20]
  30:	ea44 0303 	orr.w	r3, r4, r3
  34:	e003      	b.n	3e <RCC_AHBPeriphClockCmd+0x3e>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1059
  }
  else
  {
    RCC->AHBENR &= ~RCC_AHBPeriph;
  36:	4a04      	ldr	r2, [pc, #16]	(48 <RCC_AHBPeriphClockCmd+0x48>)
  38:	6953      	ldr	r3, [r2, #20]
  3a:	ea23 0304 	bic.w	r3, r3, r4
  3e:	6153      	str	r3, [r2, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:1061
  }
}
  40:	bd70      	pop	{r4, r5, r6, pc}
  42:	46c0      	nop			(mov r8, r8)
  44:	00000000 	.word	0x00000000
  48:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_RTCCLKCmd:

00000000 <RCC_RTCCLKCmd>:
RCC_RTCCLKCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:892
  * @retval None
  */
void RCC_RTCCLKCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   0:	2801      	cmp	r0, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:890
  * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKConfig function.
  * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_RTCCLKCmd(FunctionalState NewState)
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:892
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   6:	d904      	bls.n	12 <RCC_RTCCLKCmd+0x12>
   8:	4803      	ldr	r0, [pc, #12]	(18 <RCC_RTCCLKCmd+0x18>)
   a:	f44f 715f 	mov.w	r1, #892	; 0x37c
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:893
  *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
  12:	4b02      	ldr	r3, [pc, #8]	(1c <RCC_RTCCLKCmd+0x1c>)
  14:	601c      	str	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:894
}
  16:	bd10      	pop	{r4, pc}
  18:	00000000 	.word	0x00000000
  1c:	4242043c 	.word	0x4242043c
Disassembly of section .text.RCC_RTCCLKConfig:

00000000 <RCC_RTCCLKConfig>:
RCC_RTCCLKConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:878
  * @retval None
  */
void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
{
  /* Check the parameters */
  assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
   0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:876
  *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
  *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
  * @retval None
  */
void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
{
   4:	b510      	push	{r4, lr}
   6:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:878
  /* Check the parameters */
  assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
   8:	d00a      	beq.n	20 <RCC_RTCCLKConfig+0x20>
   a:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
   e:	d007      	beq.n	20 <RCC_RTCCLKConfig+0x20>
  10:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
  14:	d004      	beq.n	20 <RCC_RTCCLKConfig+0x20>
  16:	4805      	ldr	r0, [pc, #20]	(2c <RCC_RTCCLKConfig+0x2c>)
  18:	f240 316e 	movw	r1, #878	; 0x36e
  1c:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:880
  /* Select the RTC clock source */
  RCC->BDCR |= RCC_RTCCLKSource;
  20:	4a03      	ldr	r2, [pc, #12]	(30 <RCC_RTCCLKConfig+0x30>)
  22:	6a13      	ldr	r3, [r2, #32]
  24:	ea44 0303 	orr.w	r3, r4, r3
  28:	6213      	str	r3, [r2, #32]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:881
}
  2a:	bd10      	pop	{r4, pc}
  2c:	00000000 	.word	0x00000000
  30:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_LSICmd:

00000000 <RCC_LSICmd>:
RCC_LSICmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:861
  * @retval None
  */
void RCC_LSICmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   0:	2801      	cmp	r0, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:859
  * @note   LSI can not be disabled if the IWDG is running.
  * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_LSICmd(FunctionalState NewState)
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:861
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   6:	d904      	bls.n	12 <RCC_LSICmd+0x12>
   8:	4803      	ldr	r0, [pc, #12]	(18 <RCC_LSICmd+0x18>)
   a:	f240 315d 	movw	r1, #861	; 0x35d
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:862
  *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
  12:	4b02      	ldr	r3, [pc, #8]	(1c <RCC_LSICmd+0x1c>)
  14:	601c      	str	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:863
}
  16:	bd10      	pop	{r4, pc}
  18:	00000000 	.word	0x00000000
  1c:	42420480 	.word	0x42420480
Disassembly of section .text.RCC_LSEConfig:

00000000 <RCC_LSEConfig>:
RCC_LSEConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:828
  * @retval None
  */
void RCC_LSEConfig(uint8_t RCC_LSE)
{
  /* Check the parameters */
  assert_param(IS_RCC_LSE(RCC_LSE));
   0:	2801      	cmp	r0, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:826
  *     @arg RCC_LSE_ON: LSE oscillator ON
  *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
  * @retval None
  */
void RCC_LSEConfig(uint8_t RCC_LSE)
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:828
  /* Check the parameters */
  assert_param(IS_RCC_LSE(RCC_LSE));
   6:	d906      	bls.n	16 <RCC_LSEConfig+0x16>
   8:	2804      	cmp	r0, #4
   a:	d004      	beq.n	16 <RCC_LSEConfig+0x16>
   c:	4809      	ldr	r0, [pc, #36]	(34 <RCC_LSEConfig+0x34>)
   e:	f44f 714f 	mov.w	r1, #828	; 0x33c
  12:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:831
  /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
  /* Reset LSEON bit */
  *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
  16:	4a08      	ldr	r2, [pc, #32]	(38 <RCC_LSEConfig+0x38>)
  18:	2300      	movs	r3, #0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:835
  /* Reset LSEBYP bit */
  *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
  /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
  switch(RCC_LSE)
  1a:	2c01      	cmp	r4, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:831
{
  /* Check the parameters */
  assert_param(IS_RCC_LSE(RCC_LSE));
  /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
  /* Reset LSEON bit */
  *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
  1c:	7013      	strb	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:833
  /* Reset LSEBYP bit */
  *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
  1e:	7013      	strb	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:835
  /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
  switch(RCC_LSE)
  20:	d002      	beq.n	28 <RCC_LSEConfig+0x28>
  22:	2c04      	cmp	r4, #4
  24:	d104      	bne.n	30 <RCC_LSEConfig+0x30>
  26:	e001      	b.n	2c <RCC_LSEConfig+0x2c>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:839
  {
    case RCC_LSE_ON:
      /* Set LSEON bit */
      *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
  28:	7014      	strb	r4, [r2, #0]
  2a:	e001      	b.n	30 <RCC_LSEConfig+0x30>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:844
      break;
      
    case RCC_LSE_Bypass:
      /* Set LSEBYP and LSEON bits */
      *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
  2c:	2305      	movs	r3, #5
  2e:	7013      	strb	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:850
      break;            
      
    default:
      break;      
  }
}
  30:	bd10      	pop	{r4, pc}
  32:	46c0      	nop			(mov r8, r8)
  34:	00000000 	.word	0x00000000
  38:	40021020 	.word	0x40021020
Disassembly of section .text.RCC_ADCCLKConfig:

00000000 <RCC_ADCCLKConfig>:
RCC_ADCCLKConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:763
  *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
  *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
  * @retval None
  */
void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:766
  uint32_t tmpreg = 0;
  /* Check the parameters */
  assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
   2:	4604      	mov	r4, r0
   4:	b168      	cbz	r0, 22 <RCC_ADCCLKConfig+0x22>
   6:	f5b0 4f80 	cmp.w	r0, #16384	; 0x4000
   a:	d00a      	beq.n	22 <RCC_ADCCLKConfig+0x22>
   c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  10:	d007      	beq.n	22 <RCC_ADCCLKConfig+0x22>
  12:	f5b0 4f40 	cmp.w	r0, #49152	; 0xc000
  16:	d004      	beq.n	22 <RCC_ADCCLKConfig+0x22>
  18:	4806      	ldr	r0, [pc, #24]	(34 <RCC_ADCCLKConfig+0x34>)
  1a:	f240 21fe 	movw	r1, #766	; 0x2fe
  1e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:767
  tmpreg = RCC->CFGR;
  22:	4a05      	ldr	r2, [pc, #20]	(38 <RCC_ADCCLKConfig+0x38>)
  24:	6853      	ldr	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:769
  /* Clear ADCPRE[1:0] bits */
  tmpreg &= CFGR_ADCPRE_Reset_Mask;
  26:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:771
  /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
  tmpreg |= RCC_PCLK2;
  2a:	ea44 0303 	orr.w	r3, r4, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:773
  /* Store the new value */
  RCC->CFGR = tmpreg;
  2e:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:774
}
  30:	bd10      	pop	{r4, pc}
  32:	46c0      	nop			(mov r8, r8)
  34:	00000000 	.word	0x00000000
  38:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_USBCLKConfig:

00000000 <RCC_USBCLKConfig>:
RCC_USBCLKConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:727
  * @retval None
  */
void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
{
  /* Check the parameters */
  assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
   0:	2801      	cmp	r0, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:725
  *                                     clock source
  *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
  * @retval None
  */
void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
{
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:727
  /* Check the parameters */
  assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
   6:	d904      	bls.n	12 <RCC_USBCLKConfig+0x12>
   8:	4803      	ldr	r0, [pc, #12]	(18 <RCC_USBCLKConfig+0x18>)
   a:	f240 21d7 	movw	r1, #727	; 0x2d7
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:729

  *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
  12:	4b02      	ldr	r3, [pc, #8]	(1c <RCC_USBCLKConfig+0x1c>)
  14:	601c      	str	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:730
}
  16:	bd10      	pop	{r4, pc}
  18:	00000000 	.word	0x00000000
  1c:	424200d8 	.word	0x424200d8
Disassembly of section .text.RCC_ITConfig:

00000000 <RCC_ITConfig>:
RCC_ITConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:699
  * @retval None
  */
void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_IT(RCC_IT));
   0:	f010 0fe0 	tst.w	r0, #224	; 0xe0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:697
  * @param  NewState: new state of the specified RCC interrupts.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
{
   4:	b570      	push	{r4, r5, r6, lr}
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:699
  /* Check the parameters */
  assert_param(IS_RCC_IT(RCC_IT));
   a:	d100      	bne.n	e <RCC_ITConfig+0xe>
   c:	b920      	cbnz	r0, 18 <RCC_ITConfig+0x18>
   e:	480c      	ldr	r0, [pc, #48]	(40 <RCC_ITConfig+0x40>)
  10:	f240 21bb 	movw	r1, #699	; 0x2bb
  14:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:700
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  18:	2d01      	cmp	r5, #1
  1a:	d904      	bls.n	26 <RCC_ITConfig+0x26>
  1c:	4808      	ldr	r0, [pc, #32]	(40 <RCC_ITConfig+0x40>)
  1e:	f44f 712f 	mov.w	r1, #700	; 0x2bc
  22:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:701
  if (NewState != DISABLE)
  26:	b125      	cbz	r5, 32 <RCC_ITConfig+0x32>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:704
  {
    /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
    *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
  28:	4a06      	ldr	r2, [pc, #24]	(44 <RCC_ITConfig+0x44>)
  2a:	7813      	ldrb	r3, [r2, #0]
  2c:	ea44 0303 	orr.w	r3, r4, r3
  30:	e003      	b.n	3a <RCC_ITConfig+0x3a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:709
  }
  else
  {
    /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
    *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
  32:	4a04      	ldr	r2, [pc, #16]	(44 <RCC_ITConfig+0x44>)
  34:	7813      	ldrb	r3, [r2, #0]
  36:	ea23 0304 	bic.w	r3, r3, r4
  3a:	7013      	strb	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:711
  }
}
  3c:	bd70      	pop	{r4, r5, r6, pc}
  3e:	46c0      	nop			(mov r8, r8)
  40:	00000000 	.word	0x00000000
  44:	40021009 	.word	0x40021009
Disassembly of section .text.RCC_PCLK2Config:

00000000 <RCC_PCLK2Config>:
RCC_PCLK2Config():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:657
  *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
  *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
  * @retval None
  */
void RCC_PCLK2Config(uint32_t RCC_HCLK)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:660
  uint32_t tmpreg = 0;
  /* Check the parameters */
  assert_param(IS_RCC_PCLK(RCC_HCLK));
   2:	4604      	mov	r4, r0
   4:	b180      	cbz	r0, 28 <RCC_PCLK2Config+0x28>
   6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   a:	d00d      	beq.n	28 <RCC_PCLK2Config+0x28>
   c:	f5b0 6fa0 	cmp.w	r0, #1280	; 0x500
  10:	d00a      	beq.n	28 <RCC_PCLK2Config+0x28>
  12:	f5b0 6fc0 	cmp.w	r0, #1536	; 0x600
  16:	d007      	beq.n	28 <RCC_PCLK2Config+0x28>
  18:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
  1c:	d004      	beq.n	28 <RCC_PCLK2Config+0x28>
  1e:	4806      	ldr	r0, [pc, #24]	(38 <RCC_PCLK2Config+0x38>)
  20:	f44f 7125 	mov.w	r1, #660	; 0x294
  24:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:661
  tmpreg = RCC->CFGR;
  28:	4a04      	ldr	r2, [pc, #16]	(3c <RCC_PCLK2Config+0x3c>)
  2a:	6853      	ldr	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:663
  /* Clear PPRE2[2:0] bits */
  tmpreg &= CFGR_PPRE2_Reset_Mask;
  2c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:665
  /* Set PPRE2[2:0] bits according to RCC_HCLK value */
  tmpreg |= RCC_HCLK << 3;
  30:	ea43 03c4 	orr.w	r3, r3, r4, lsl #3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:667
  /* Store the new value */
  RCC->CFGR = tmpreg;
  34:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:668
}
  36:	bd10      	pop	{r4, pc}
  38:	00000000 	.word	0x00000000
  3c:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_PCLK1Config:

00000000 <RCC_PCLK1Config>:
RCC_PCLK1Config():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:631
  *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
  *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
  * @retval None
  */
void RCC_PCLK1Config(uint32_t RCC_HCLK)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:634
  uint32_t tmpreg = 0;
  /* Check the parameters */
  assert_param(IS_RCC_PCLK(RCC_HCLK));
   2:	4604      	mov	r4, r0
   4:	b180      	cbz	r0, 28 <RCC_PCLK1Config+0x28>
   6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   a:	d00d      	beq.n	28 <RCC_PCLK1Config+0x28>
   c:	f5b0 6fa0 	cmp.w	r0, #1280	; 0x500
  10:	d00a      	beq.n	28 <RCC_PCLK1Config+0x28>
  12:	f5b0 6fc0 	cmp.w	r0, #1536	; 0x600
  16:	d007      	beq.n	28 <RCC_PCLK1Config+0x28>
  18:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
  1c:	d004      	beq.n	28 <RCC_PCLK1Config+0x28>
  1e:	4806      	ldr	r0, [pc, #24]	(38 <RCC_PCLK1Config+0x38>)
  20:	f240 217a 	movw	r1, #634	; 0x27a
  24:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:635
  tmpreg = RCC->CFGR;
  28:	4a04      	ldr	r2, [pc, #16]	(3c <RCC_PCLK1Config+0x3c>)
  2a:	6853      	ldr	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:637
  /* Clear PPRE1[2:0] bits */
  tmpreg &= CFGR_PPRE1_Reset_Mask;
  2c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:639
  /* Set PPRE1[2:0] bits according to RCC_HCLK value */
  tmpreg |= RCC_HCLK;
  30:	ea44 0303 	orr.w	r3, r4, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:641
  /* Store the new value */
  RCC->CFGR = tmpreg;
  34:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:642
}
  36:	bd10      	pop	{r4, pc}
  38:	00000000 	.word	0x00000000
  3c:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_HCLKConfig:

00000000 <RCC_HCLKConfig>:
RCC_HCLKConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:605
  *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
  *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
  * @retval None
  */
void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:608
  uint32_t tmpreg = 0;
  /* Check the parameters */
  assert_param(IS_RCC_HCLK(RCC_SYSCLK));
   2:	4604      	mov	r4, r0
   4:	b1a0      	cbz	r0, 30 <RCC_HCLKConfig+0x30>
   6:	2880      	cmp	r0, #128
   8:	d012      	beq.n	30 <RCC_HCLKConfig+0x30>
   a:	2890      	cmp	r0, #144
   c:	d010      	beq.n	30 <RCC_HCLKConfig+0x30>
   e:	28a0      	cmp	r0, #160
  10:	d00e      	beq.n	30 <RCC_HCLKConfig+0x30>
  12:	28b0      	cmp	r0, #176
  14:	d00c      	beq.n	30 <RCC_HCLKConfig+0x30>
  16:	28c0      	cmp	r0, #192
  18:	d00a      	beq.n	30 <RCC_HCLKConfig+0x30>
  1a:	28d0      	cmp	r0, #208
  1c:	d008      	beq.n	30 <RCC_HCLKConfig+0x30>
  1e:	28e0      	cmp	r0, #224
  20:	d006      	beq.n	30 <RCC_HCLKConfig+0x30>
  22:	28f0      	cmp	r0, #240
  24:	d004      	beq.n	30 <RCC_HCLKConfig+0x30>
  26:	4806      	ldr	r0, [pc, #24]	(40 <RCC_HCLKConfig+0x40>)
  28:	f44f 7118 	mov.w	r1, #608	; 0x260
  2c:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:609
  tmpreg = RCC->CFGR;
  30:	4a04      	ldr	r2, [pc, #16]	(44 <RCC_HCLKConfig+0x44>)
  32:	6853      	ldr	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:611
  /* Clear HPRE[3:0] bits */
  tmpreg &= CFGR_HPRE_Reset_Mask;
  34:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:613
  /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
  tmpreg |= RCC_SYSCLK;
  38:	ea44 0303 	orr.w	r3, r4, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:615
  /* Store the new value */
  RCC->CFGR = tmpreg;
  3c:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:616
}
  3e:	bd10      	pop	{r4, pc}
  40:	00000000 	.word	0x00000000
  44:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_SYSCLKConfig:

00000000 <RCC_SYSCLKConfig>:
RCC_SYSCLKConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:561
  *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
  *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
  * @retval None
  */
void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
{
   0:	2802      	cmp	r0, #2
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:564
  uint32_t tmpreg = 0;
  /* Check the parameters */
  assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
   6:	d904      	bls.n	12 <RCC_SYSCLKConfig+0x12>
   8:	4806      	ldr	r0, [pc, #24]	(24 <RCC_SYSCLKConfig+0x24>)
   a:	f44f 710d 	mov.w	r1, #564	; 0x234
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:565
  tmpreg = RCC->CFGR;
  12:	4a05      	ldr	r2, [pc, #20]	(28 <RCC_SYSCLKConfig+0x28>)
  14:	6853      	ldr	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:567
  /* Clear SW[1:0] bits */
  tmpreg &= CFGR_SW_Mask;
  16:	f023 0303 	bic.w	r3, r3, #3	; 0x3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:569
  /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
  tmpreg |= RCC_SYSCLKSource;
  1a:	ea44 0303 	orr.w	r3, r4, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:571
  /* Store the new value */
  RCC->CFGR = tmpreg;
  1e:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:572
}
  20:	bd10      	pop	{r4, pc}
  22:	46c0      	nop			(mov r8, r8)
  24:	00000000 	.word	0x00000000
  28:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_PLLCmd:

00000000 <RCC_PLLCmd>:
RCC_PLLCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:402
  * @note   The PLL can not be disabled if it is used as system clock.
  * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_PLLCmd(FunctionalState NewState)
{
   0:	2801      	cmp	r0, #1
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:404
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   6:	d904      	bls.n	12 <RCC_PLLCmd+0x12>
   8:	4803      	ldr	r0, [pc, #12]	(18 <RCC_PLLCmd+0x18>)
   a:	f44f 71ca 	mov.w	r1, #404	; 0x194
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:406

  *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
  12:	4b02      	ldr	r3, [pc, #8]	(1c <RCC_PLLCmd+0x1c>)
  14:	601c      	str	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:407
}
  16:	bd10      	pop	{r4, pc}
  18:	00000000 	.word	0x00000000
  1c:	42420060 	.word	0x42420060
Disassembly of section .text.RCC_PLLConfig:

00000000 <RCC_PLLConfig>:
RCC_PLLConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:379
  *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_5}
  *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
  * @retval None
  */
void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:383
  uint32_t tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
   4:	4605      	mov	r5, r0
   6:	b150      	cbz	r0, 1e <RCC_PLLConfig+0x1e>
   8:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
   c:	d007      	beq.n	1e <RCC_PLLConfig+0x1e>
   e:	f5b0 3f40 	cmp.w	r0, #196608	; 0x30000
  12:	d004      	beq.n	1e <RCC_PLLConfig+0x1e>
  14:	481e      	ldr	r0, [pc, #120]	(90 <RCC_PLLConfig+0x90>)
  16:	f240 117f 	movw	r1, #383	; 0x17f
  1a:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:384
  assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
  1e:	b374      	cbz	r4, 7e <RCC_PLLConfig+0x7e>
  20:	f5b4 2f80 	cmp.w	r4, #262144	; 0x40000
  24:	d02b      	beq.n	7e <RCC_PLLConfig+0x7e>
  26:	f5b4 2f00 	cmp.w	r4, #524288	; 0x80000
  2a:	d028      	beq.n	7e <RCC_PLLConfig+0x7e>
  2c:	f5b4 2f40 	cmp.w	r4, #786432	; 0xc0000
  30:	d025      	beq.n	7e <RCC_PLLConfig+0x7e>
  32:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
  36:	d022      	beq.n	7e <RCC_PLLConfig+0x7e>
  38:	f5b4 1fa0 	cmp.w	r4, #1310720	; 0x140000
  3c:	d01f      	beq.n	7e <RCC_PLLConfig+0x7e>
  3e:	f5b4 1fc0 	cmp.w	r4, #1572864	; 0x180000
  42:	d01c      	beq.n	7e <RCC_PLLConfig+0x7e>
  44:	f5b4 1fe0 	cmp.w	r4, #1835008	; 0x1c0000
  48:	d019      	beq.n	7e <RCC_PLLConfig+0x7e>
  4a:	f5b4 1f00 	cmp.w	r4, #2097152	; 0x200000
  4e:	d016      	beq.n	7e <RCC_PLLConfig+0x7e>
  50:	f5b4 1f10 	cmp.w	r4, #2359296	; 0x240000
  54:	d013      	beq.n	7e <RCC_PLLConfig+0x7e>
  56:	f5b4 1f20 	cmp.w	r4, #2621440	; 0x280000
  5a:	d010      	beq.n	7e <RCC_PLLConfig+0x7e>
  5c:	f5b4 1f30 	cmp.w	r4, #2883584	; 0x2c0000
  60:	d00d      	beq.n	7e <RCC_PLLConfig+0x7e>
  62:	f5b4 1f40 	cmp.w	r4, #3145728	; 0x300000
  66:	d00a      	beq.n	7e <RCC_PLLConfig+0x7e>
  68:	f5b4 1f50 	cmp.w	r4, #3407872	; 0x340000
  6c:	d007      	beq.n	7e <RCC_PLLConfig+0x7e>
  6e:	f5b4 1f60 	cmp.w	r4, #3670016	; 0x380000
  72:	d004      	beq.n	7e <RCC_PLLConfig+0x7e>
  74:	4806      	ldr	r0, [pc, #24]	(90 <RCC_PLLConfig+0x90>)
  76:	f44f 71c0 	mov.w	r1, #384	; 0x180
  7a:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:386

  tmpreg = RCC->CFGR;
  7e:	4a05      	ldr	r2, [pc, #20]	(94 <RCC_PLLConfig+0x94>)
  80:	6853      	ldr	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:390
  /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  tmpreg &= CFGR_PLL_Mask;
  /* Set the PLL configuration bits */
  tmpreg |= RCC_PLLSource | RCC_PLLMul;
  82:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
  86:	ea45 0303 	orr.w	r3, r5, r3
  8a:	4323      	orrs	r3, r4
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:392
  /* Store the new value */
  RCC->CFGR = tmpreg;
  8c:	6053      	str	r3, [r2, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:393
}
  8e:	bd70      	pop	{r4, r5, r6, pc}
  90:	00000000 	.word	0x00000000
  94:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_HSICmd:

00000000 <RCC_HSICmd>:
RCC_HSICmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:355
  * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
  * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_HSICmd(FunctionalState NewState)
{
   0:	2801      	cmp	r0, #1
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:357
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
   6:	d904      	bls.n	12 <RCC_HSICmd+0x12>
   8:	4803      	ldr	r0, [pc, #12]	(18 <RCC_HSICmd+0x18>)
   a:	f240 1165 	movw	r1, #357	; 0x165
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:358
  *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
  12:	4b02      	ldr	r3, [pc, #8]	(1c <RCC_HSICmd+0x1c>)
  14:	601c      	str	r4, [r3, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:359
}
  16:	bd10      	pop	{r4, pc}
  18:	00000000 	.word	0x00000000
  1c:	42420000 	.word	0x42420000
Disassembly of section .text.RCC_AdjustHSICalibrationValue:

00000000 <RCC_AdjustHSICalibrationValue>:
RCC_AdjustHSICalibrationValue():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:335
  * @param  HSICalibrationValue: specifies the calibration trimming value.
  *   This parameter must be a number between 0 and 0x1F.
  * @retval None
  */
void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
{
   0:	281f      	cmp	r0, #31
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:338
  uint32_t tmpreg = 0;
  /* Check the parameters */
  assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
   6:	d904      	bls.n	12 <RCC_AdjustHSICalibrationValue+0x12>
   8:	4806      	ldr	r0, [pc, #24]	(24 <RCC_AdjustHSICalibrationValue+0x24>)
   a:	f44f 71a9 	mov.w	r1, #338	; 0x152
   e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:339
  tmpreg = RCC->CR;
  12:	4a05      	ldr	r2, [pc, #20]	(28 <RCC_AdjustHSICalibrationValue+0x28>)
  14:	6813      	ldr	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:341
  /* Clear HSITRIM[4:0] bits */
  tmpreg &= CR_HSITRIM_Mask;
  16:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:343
  /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
  tmpreg |= (uint32_t)HSICalibrationValue << 3;
  1a:	ea43 03c4 	orr.w	r3, r3, r4, lsl #3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:345
  /* Store the new value */
  RCC->CR = tmpreg;
  1e:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:346
}
  20:	bd10      	pop	{r4, pc}
  22:	46c0      	nop			(mov r8, r8)
  24:	00000000 	.word	0x00000000
  28:	40021000 	.word	0x40021000
Disassembly of section .text.RCC_HSEConfig:

00000000 <RCC_HSEConfig>:
RCC_HSEConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:271
  *     @arg RCC_HSE_ON: HSE oscillator ON
  *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
  * @retval None
  */
void RCC_HSEConfig(uint32_t RCC_HSE)
{
   0:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:273
  /* Check the parameters */
  assert_param(IS_RCC_HSE(RCC_HSE));
   2:	4604      	mov	r4, r0
   4:	b150      	cbz	r0, 1c <RCC_HSEConfig+0x1c>
   6:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
   a:	d007      	beq.n	1c <RCC_HSEConfig+0x1c>
   c:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
  10:	d004      	beq.n	1c <RCC_HSEConfig+0x1c>
  12:	480f      	ldr	r0, [pc, #60]	(50 <RCC_HSEConfig+0x50>)
  14:	f240 1111 	movw	r1, #273	; 0x111
  18:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:276
  /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
  /* Reset HSEON bit */
  RCC->CR &= CR_HSEON_Reset;
  1c:	4a0d      	ldr	r2, [pc, #52]	(54 <RCC_HSEConfig+0x54>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:280
  /* Reset HSEBYP bit */
  RCC->CR &= CR_HSEBYP_Reset;
  /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  switch(RCC_HSE)
  1e:	f5b4 3f80 	cmp.w	r4, #65536	; 0x10000
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:276
{
  /* Check the parameters */
  assert_param(IS_RCC_HSE(RCC_HSE));
  /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
  /* Reset HSEON bit */
  RCC->CR &= CR_HSEON_Reset;
  22:	6813      	ldr	r3, [r2, #0]
  24:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  28:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:278
  /* Reset HSEBYP bit */
  RCC->CR &= CR_HSEBYP_Reset;
  2a:	6813      	ldr	r3, [r2, #0]
  2c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
  30:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:280
  /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  switch(RCC_HSE)
  32:	d003      	beq.n	3c <RCC_HSEConfig+0x3c>
  34:	f5b4 2f80 	cmp.w	r4, #262144	; 0x40000
  38:	d108      	bne.n	4c <RCC_HSEConfig+0x4c>
  3a:	e003      	b.n	44 <RCC_HSEConfig+0x44>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:284
  {
    case RCC_HSE_ON:
      /* Set HSEON bit */
      RCC->CR |= CR_HSEON_Set;
  3c:	6813      	ldr	r3, [r2, #0]
  3e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  42:	e002      	b.n	4a <RCC_HSEConfig+0x4a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:289
      break;
      
    case RCC_HSE_Bypass:
      /* Set HSEBYP and HSEON bits */
      RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
  44:	6813      	ldr	r3, [r2, #0]
  46:	f443 23a0 	orr.w	r3, r3, #327680	; 0x50000
  4a:	6013      	str	r3, [r2, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_rcc.c:295
      break;
      
    default:
      break;
  }
}
  4c:	bd10      	pop	{r4, pc}
  4e:	46c0      	nop			(mov r8, r8)
  50:	00000000 	.word	0x00000000
  54:	40021000 	.word	0x40021000
