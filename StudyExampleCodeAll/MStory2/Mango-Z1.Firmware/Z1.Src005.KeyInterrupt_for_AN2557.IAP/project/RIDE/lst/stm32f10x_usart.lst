
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Z1.Src005.KeyInterrupt_for_AN2557.IAP\project\RIDE\obj\stm32f10x_usart.o:     file format elf32-littlearm
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Z1.Src005.KeyInterrupt_for_AN2557.IAP\project\RIDE\obj\stm32f10x_usart.o

Disassembly of section .text.USART_StructInit:

00000000 <USART_StructInit>:
USART_StructInit():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:252
  * @retval None
  */
void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
{
  /* USART_InitStruct members default value */
  USART_InitStruct->USART_BaudRate = 9600;
   0:	f44f 5316 	mov.w	r3, #9600	; 0x2580
   4:	6003      	str	r3, [r0, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:256
  USART_InitStruct->USART_WordLength = USART_WordLength_8b;
  USART_InitStruct->USART_StopBits = USART_StopBits_1;
  USART_InitStruct->USART_Parity = USART_Parity_No ;
  USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   6:	f04f 020c 	mov.w	r2, #12	; 0xc
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:253
  */
void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
{
  /* USART_InitStruct members default value */
  USART_InitStruct->USART_BaudRate = 9600;
  USART_InitStruct->USART_WordLength = USART_WordLength_8b;
   a:	f5a3 5316 	sub.w	r3, r3, #9600	; 0x2580
   e:	8083      	strh	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:254
  USART_InitStruct->USART_StopBits = USART_StopBits_1;
  10:	80c3      	strh	r3, [r0, #6]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:255
  USART_InitStruct->USART_Parity = USART_Parity_No ;
  12:	8103      	strh	r3, [r0, #8]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:256
  USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  14:	8142      	strh	r2, [r0, #10]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:257
  USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
  16:	8183      	strh	r3, [r0, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:258
}
  18:	4770      	bx	lr
  1a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.USART_ClockStructInit:

00000000 <USART_ClockStructInit>:
USART_ClockStructInit():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:304
  * @retval None
  */
void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
{
  /* USART_ClockInitStruct members default value */
  USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
   0:	2300      	movs	r3, #0
   2:	8003      	strh	r3, [r0, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:305
  USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
   4:	8043      	strh	r3, [r0, #2]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:306
  USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
   6:	8083      	strh	r3, [r0, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:307
  USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
   8:	80c3      	strh	r3, [r0, #6]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:308
}
   a:	4770      	bx	lr
Disassembly of section .text.USART_ClearITPendingBit:

00000000 <USART_ClearITPendingBit>:
USART_ClearITPendingBit():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:943
  */
void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
{
  uint16_t bitpos = 0x00, itmask = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b23      	ldr	r3, [pc, #140]	(90 <USART_ClearITPendingBit+0x90>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:940
  *   - TXE pending bit is cleared only by a write to the USART_DR register 
  *     (USART_SendData()).
  * @retval None
  */
void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:943
  uint16_t bitpos = 0x00, itmask = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:940
  *   - TXE pending bit is cleared only by a write to the USART_DR register 
  *     (USART_SendData()).
  * @retval None
  */
void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:943
  uint16_t bitpos = 0x00, itmask = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_ClearITPendingBit+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_ClearITPendingBit+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_ClearITPendingBit+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_ClearITPendingBit+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_ClearITPendingBit+0x36>
  2c:	4819      	ldr	r0, [pc, #100]	(94 <USART_ClearITPendingBit+0x94>)
  2e:	f240 31af 	movw	r1, #943	; 0x3af
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:944
  assert_param(IS_USART_CLEAR_IT(USART_IT));
  36:	f240 6326 	movw	r3, #1574	; 0x626
  3a:	429d      	cmp	r5, r3
  3c:	d01c      	beq.n	78 <USART_ClearITPendingBit+0x78>
  3e:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
  42:	3b01      	subs	r3, #1
  44:	429d      	cmp	r5, r3
  46:	d017      	beq.n	78 <USART_ClearITPendingBit+0x78>
  48:	f640 0346 	movw	r3, #2118	; 0x846
  4c:	429d      	cmp	r5, r3
  4e:	d013      	beq.n	78 <USART_ClearITPendingBit+0x78>
  50:	f503 7392 	add.w	r3, r3, #292	; 0x124
  54:	429d      	cmp	r5, r3
  56:	d016      	beq.n	86 <USART_ClearITPendingBit+0x86>
  58:	480e      	ldr	r0, [pc, #56]	(94 <USART_ClearITPendingBit+0x94>)
  5a:	f44f 716c 	mov.w	r1, #944	; 0x3b0
  5e:	e009      	b.n	74 <USART_ClearITPendingBit+0x74>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:948
  /* The CTS interrupt is not available for UART4 and UART5 */
  if (USART_IT == USART_IT_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  60:	4b0d      	ldr	r3, [pc, #52]	(98 <USART_ClearITPendingBit+0x98>)
  62:	429c      	cmp	r4, r3
  64:	d008      	beq.n	78 <USART_ClearITPendingBit+0x78>
  66:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  6a:	429c      	cmp	r4, r3
  6c:	d004      	beq.n	78 <USART_ClearITPendingBit+0x78>
  6e:	4809      	ldr	r0, [pc, #36]	(94 <USART_ClearITPendingBit+0x94>)
  70:	f44f 716d 	mov.w	r1, #948	; 0x3b4
  74:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:953
  }   
  
  bitpos = USART_IT >> 0x08;
  itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
  USARTx->SR = (uint16_t)~itmask;
  78:	0a2a      	lsrs	r2, r5, #8
  7a:	2301      	movs	r3, #1
  7c:	4093      	lsls	r3, r2
  7e:	43db      	mvns	r3, r3
  80:	b29b      	uxth	r3, r3
  82:	8023      	strh	r3, [r4, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:954
}
  84:	bd70      	pop	{r4, r5, r6, pc}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:948
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_CLEAR_IT(USART_IT));
  /* The CTS interrupt is not available for UART4 and UART5 */
  if (USART_IT == USART_IT_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  86:	4b02      	ldr	r3, [pc, #8]	(90 <USART_ClearITPendingBit+0x90>)
  88:	429c      	cmp	r4, r3
  8a:	d1e9      	bne.n	60 <USART_ClearITPendingBit+0x60>
  8c:	e7f4      	b.n	78 <USART_ClearITPendingBit+0x78>
  8e:	46c0      	nop			(mov r8, r8)
  90:	40013800 	.word	0x40013800
  94:	00000000 	.word	0x00000000
  98:	40004400 	.word	0x40004400
Disassembly of section .text.USART_GetITStatus:

00000000 <USART_GetITStatus>:
USART_GetITStatus():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:870
ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
{
  uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
  ITStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b38      	ldr	r3, [pc, #224]	(e4 <USART_GetITStatus+0xe4>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:866
  *     @arg USART_IT_FE:   Framing Error interrupt
  *     @arg USART_IT_PE:   Parity Error interrupt
  * @retval The new state of USART_IT (SET or RESET).
  */
ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:870
  uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
  ITStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:866
  *     @arg USART_IT_FE:   Framing Error interrupt
  *     @arg USART_IT_PE:   Parity Error interrupt
  * @retval The new state of USART_IT (SET or RESET).
  */
ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
{
   6:	4605      	mov	r5, r0
   8:	460c      	mov	r4, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:870
  uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
  ITStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_GetITStatus+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_GetITStatus+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_GetITStatus+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_GetITStatus+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_GetITStatus+0x36>
  2c:	482e      	ldr	r0, [pc, #184]	(e8 <USART_GetITStatus+0xe8>)
  2e:	f240 3166 	movw	r1, #870	; 0x366
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:871
  assert_param(IS_USART_GET_IT(USART_IT));
  36:	2c28      	cmp	r4, #40
  38:	d033      	beq.n	a2 <USART_GetITStatus+0xa2>
  3a:	f240 7327 	movw	r3, #1831	; 0x727
  3e:	429c      	cmp	r4, r3
  40:	d02f      	beq.n	a2 <USART_GetITStatus+0xa2>
  42:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
  46:	3b01      	subs	r3, #1
  48:	429c      	cmp	r4, r3
  4a:	d02a      	beq.n	a2 <USART_GetITStatus+0xa2>
  4c:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
  50:	3b01      	subs	r3, #1
  52:	429c      	cmp	r4, r3
  54:	d025      	beq.n	a2 <USART_GetITStatus+0xa2>
  56:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
  5a:	3b01      	subs	r3, #1
  5c:	429c      	cmp	r4, r3
  5e:	d020      	beq.n	a2 <USART_GetITStatus+0xa2>
  60:	f640 0346 	movw	r3, #2118	; 0x846
  64:	429c      	cmp	r4, r3
  66:	d01c      	beq.n	a2 <USART_GetITStatus+0xa2>
  68:	f503 7392 	add.w	r3, r3, #292	; 0x124
  6c:	429c      	cmp	r4, r3
  6e:	d035      	beq.n	dc <USART_GetITStatus+0xdc>
  70:	f5b4 7f58 	cmp.w	r4, #864	; 0x360
  74:	d015      	beq.n	a2 <USART_GetITStatus+0xa2>
  76:	f5b4 7f18 	cmp.w	r4, #608	; 0x260
  7a:	d012      	beq.n	a2 <USART_GetITStatus+0xa2>
  7c:	f5b4 7fb0 	cmp.w	r4, #352	; 0x160
  80:	d00f      	beq.n	a2 <USART_GetITStatus+0xa2>
  82:	4819      	ldr	r0, [pc, #100]	(e8 <USART_GetITStatus+0xe8>)
  84:	f240 3167 	movw	r1, #871	; 0x367
  88:	e009      	b.n	9e <USART_GetITStatus+0x9e>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:875
  /* The CTS interrupt is not available for UART4 and UART5 */ 
  if (USART_IT == USART_IT_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  8a:	4b18      	ldr	r3, [pc, #96]	(ec <USART_GetITStatus+0xec>)
  8c:	429d      	cmp	r5, r3
  8e:	d008      	beq.n	a2 <USART_GetITStatus+0xa2>
  90:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  94:	429d      	cmp	r5, r3
  96:	d004      	beq.n	a2 <USART_GetITStatus+0xa2>
  98:	4813      	ldr	r0, [pc, #76]	(e8 <USART_GetITStatus+0xe8>)
  9a:	f240 316b 	movw	r1, #875	; 0x36b
  9e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:882
  
  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);
  /* Get the interrupt position */
  itmask = USART_IT & IT_Mask;
  itmask = (uint32_t)0x01 << itmask;
  a2:	2301      	movs	r3, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:879
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }   
  
  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);
  a4:	f3c4 1142 	ubfx	r1, r4, #5, #3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:882
  /* Get the interrupt position */
  itmask = USART_IT & IT_Mask;
  itmask = (uint32_t)0x01 << itmask;
  a8:	f004 021f 	and.w	r2, r4, #31	; 0x1f
  ac:	fa13 f202 	lsls.w	r2, r3, r2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:884
  
  if (usartreg == 0x01) /* The IT  is in CR1 register */
  b0:	4299      	cmp	r1, r3
  b2:	d101      	bne.n	b8 <USART_GetITStatus+0xb8>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:886
  {
    itmask &= USARTx->CR1;
  b4:	89ab      	ldrh	r3, [r5, #12]
  b6:	e003      	b.n	c0 <USART_GetITStatus+0xc0>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:888
  }
  else if (usartreg == 0x02) /* The IT  is in CR2 register */
  b8:	2902      	cmp	r1, #2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:890
  {
    itmask &= USARTx->CR2;
  ba:	bf0c      	ite	eq
  bc:	8a2b      	ldrheq	r3, [r5, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:894
  }
  else /* The IT  is in CR3 register */
  {
    itmask &= USARTx->CR3;
  be:	8aab      	ldrhne	r3, [r5, #20]
  c0:	b29b      	uxth	r3, r3
  c2:	ea02 0003 	and.w	r0, r2, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:899
  }
  
  bitpos = USART_IT >> 0x08;
  bitpos = (uint32_t)0x01 << bitpos;
  bitpos &= USARTx->SR;
  c6:	882b      	ldrh	r3, [r5, #0]
  c8:	b299      	uxth	r1, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:900
  if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
  ca:	b130      	cbz	r0, da <USART_GetITStatus+0xda>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:898
  {
    itmask &= USARTx->CR3;
  }
  
  bitpos = USART_IT >> 0x08;
  bitpos = (uint32_t)0x01 << bitpos;
  cc:	0a22      	lsrs	r2, r4, #8
  ce:	2301      	movs	r3, #1
  d0:	4093      	lsls	r3, r2
  d2:	420b      	tst	r3, r1
  d4:	bf0c      	ite	eq
  d6:	2000      	moveq	r0, #0
  d8:	2001      	movne	r0, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:910
  {
    bitstatus = RESET;
  }
  
  return bitstatus;  
}
  da:	bd70      	pop	{r4, r5, r6, pc}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:875
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_GET_IT(USART_IT));
  /* The CTS interrupt is not available for UART4 and UART5 */ 
  if (USART_IT == USART_IT_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  dc:	4b01      	ldr	r3, [pc, #4]	(e4 <USART_GetITStatus+0xe4>)
  de:	429d      	cmp	r5, r3
  e0:	d1d3      	bne.n	8a <USART_GetITStatus+0x8a>
  e2:	e7de      	b.n	a2 <USART_GetITStatus+0xa2>
  e4:	40013800 	.word	0x40013800
  e8:	00000000 	.word	0x00000000
  ec:	40004400 	.word	0x40004400
Disassembly of section .text.USART_ClearFlag:

00000000 <USART_ClearFlag>:
USART_ClearFlag():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:835
  * @retval None
  */
void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b1e      	ldr	r3, [pc, #120]	(7c <USART_ClearFlag+0x7c>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:833
  *   - TXE flag is cleared only by a write to the USART_DR register 
  *     (USART_SendData()).
  * @retval None
  */
void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:835
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:833
  *   - TXE flag is cleared only by a write to the USART_DR register 
  *     (USART_SendData()).
  * @retval None
  */
void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:835
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_ClearFlag+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_ClearFlag+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_ClearFlag+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_ClearFlag+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_ClearFlag+0x36>
  2c:	4814      	ldr	r0, [pc, #80]	(80 <USART_ClearFlag+0x80>)
  2e:	f240 3143 	movw	r1, #835	; 0x343
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:836
  assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
  36:	f64f 439f 	movw	r3, #64671	; 0xfc9f
  3a:	ea05 0303 	and.w	r3, r5, r3
  3e:	b903      	cbnz	r3, 42 <USART_ClearFlag+0x42>
  40:	b925      	cbnz	r5, 4c <USART_ClearFlag+0x4c>
  42:	480f      	ldr	r0, [pc, #60]	(80 <USART_ClearFlag+0x80>)
  44:	f44f 7151 	mov.w	r1, #836	; 0x344
  48:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:838
  /* The CTS flag is not available for UART4 and UART5 */
  if ((USART_FLAG & USART_FLAG_CTS) == USART_FLAG_CTS)
  4c:	f415 7f00 	tst.w	r5, #512	; 0x200
  50:	d00f      	beq.n	72 <USART_ClearFlag+0x72>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:840
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  52:	4b0a      	ldr	r3, [pc, #40]	(7c <USART_ClearFlag+0x7c>)
  54:	429c      	cmp	r4, r3
  56:	d00c      	beq.n	72 <USART_ClearFlag+0x72>
  58:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  5c:	429c      	cmp	r4, r3
  5e:	d008      	beq.n	72 <USART_ClearFlag+0x72>
  60:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  64:	429c      	cmp	r4, r3
  66:	d004      	beq.n	72 <USART_ClearFlag+0x72>
  68:	4805      	ldr	r0, [pc, #20]	(80 <USART_ClearFlag+0x80>)
  6a:	f44f 7152 	mov.w	r1, #840	; 0x348
  6e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:843
  } 
   
  USARTx->SR = (uint16_t)~USART_FLAG;
  72:	43eb      	mvns	r3, r5
  74:	b29b      	uxth	r3, r3
  76:	8023      	strh	r3, [r4, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:844
}
  78:	bd70      	pop	{r4, r5, r6, pc}
  7a:	46c0      	nop			(mov r8, r8)
  7c:	40013800 	.word	0x40013800
  80:	00000000 	.word	0x00000000
Disassembly of section .text.USART_GetFlagStatus:

00000000 <USART_GetFlagStatus>:
USART_GetFlagStatus():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:787
  */
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b25      	ldr	r3, [pc, #148]	(98 <USART_GetFlagStatus+0x98>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:784
  *     @arg USART_FLAG_FE:   Framing Error flag
  *     @arg USART_FLAG_PE:   Parity Error flag
  * @retval The new state of USART_FLAG (SET or RESET).
  */
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:787
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:784
  *     @arg USART_FLAG_FE:   Framing Error flag
  *     @arg USART_FLAG_PE:   Parity Error flag
  * @retval The new state of USART_FLAG (SET or RESET).
  */
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
   6:	4605      	mov	r5, r0
   8:	460c      	mov	r4, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:787
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_GetFlagStatus+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_GetFlagStatus+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_GetFlagStatus+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_GetFlagStatus+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_GetFlagStatus+0x36>
  2c:	481b      	ldr	r0, [pc, #108]	(9c <USART_GetFlagStatus+0x9c>)
  2e:	f240 3113 	movw	r1, #787	; 0x313
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:788
  assert_param(IS_USART_FLAG(USART_FLAG));
  36:	2c01      	cmp	r4, #1
  38:	d023      	beq.n	82 <USART_GetFlagStatus+0x82>
  3a:	2c80      	cmp	r4, #128
  3c:	d021      	beq.n	82 <USART_GetFlagStatus+0x82>
  3e:	2c40      	cmp	r4, #64
  40:	d01f      	beq.n	82 <USART_GetFlagStatus+0x82>
  42:	2c20      	cmp	r4, #32
  44:	d01d      	beq.n	82 <USART_GetFlagStatus+0x82>
  46:	2c10      	cmp	r4, #16
  48:	d01b      	beq.n	82 <USART_GetFlagStatus+0x82>
  4a:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  4e:	d018      	beq.n	82 <USART_GetFlagStatus+0x82>
  50:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  54:	d01b      	beq.n	8e <USART_GetFlagStatus+0x8e>
  56:	2c08      	cmp	r4, #8
  58:	d013      	beq.n	82 <USART_GetFlagStatus+0x82>
  5a:	2c04      	cmp	r4, #4
  5c:	d011      	beq.n	82 <USART_GetFlagStatus+0x82>
  5e:	2c02      	cmp	r4, #2
  60:	d00f      	beq.n	82 <USART_GetFlagStatus+0x82>
  62:	480e      	ldr	r0, [pc, #56]	(9c <USART_GetFlagStatus+0x9c>)
  64:	f44f 7145 	mov.w	r1, #788	; 0x314
  68:	e009      	b.n	7e <USART_GetFlagStatus+0x7e>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:792
  /* The CTS flag is not available for UART4 and UART5 */
  if (USART_FLAG == USART_FLAG_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  6a:	4b0d      	ldr	r3, [pc, #52]	(a0 <USART_GetFlagStatus+0xa0>)
  6c:	429d      	cmp	r5, r3
  6e:	d008      	beq.n	82 <USART_GetFlagStatus+0x82>
  70:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  74:	429d      	cmp	r5, r3
  76:	d004      	beq.n	82 <USART_GetFlagStatus+0x82>
  78:	4808      	ldr	r0, [pc, #32]	(9c <USART_GetFlagStatus+0x9c>)
  7a:	f44f 7146 	mov.w	r1, #792	; 0x318
  7e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:795
  }  
  
  if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
  82:	882b      	ldrh	r3, [r5, #0]
  84:	421c      	tst	r4, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:804
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  86:	bf0c      	ite	eq
  88:	2000      	moveq	r0, #0
  8a:	2001      	movne	r0, #1
  8c:	bd70      	pop	{r4, r5, r6, pc}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:792
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_FLAG(USART_FLAG));
  /* The CTS flag is not available for UART4 and UART5 */
  if (USART_FLAG == USART_FLAG_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  8e:	4b02      	ldr	r3, [pc, #8]	(98 <USART_GetFlagStatus+0x98>)
  90:	429d      	cmp	r5, r3
  92:	d1ea      	bne.n	6a <USART_GetFlagStatus+0x6a>
  94:	e7f5      	b.n	82 <USART_GetFlagStatus+0x82>
  96:	46c0      	nop			(mov r8, r8)
  98:	40013800 	.word	0x40013800
  9c:	00000000 	.word	0x00000000
  a0:	40004400 	.word	0x40004400
Disassembly of section .text.USART_IrDACmd:

00000000 <USART_IrDACmd>:
USART_IrDACmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:749
  * @retval None
  */
void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_IrDACmd+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:747
  * @param  NewState: new state of the IrDA mode.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:749
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:747
  * @param  NewState: new state of the IrDA mode.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:749
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_IrDACmd+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_IrDACmd+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_IrDACmd+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_IrDACmd+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_IrDACmd+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_IrDACmd+0x64>)
  2e:	f240 21ed 	movw	r1, #749	; 0x2ed
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:750
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  36:	2d01      	cmp	r5, #1
  38:	d904      	bls.n	44 <USART_IrDACmd+0x44>
  3a:	480a      	ldr	r0, [pc, #40]	(64 <USART_IrDACmd+0x64>)
  3c:	f240 21ee 	movw	r1, #750	; 0x2ee
  40:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:752
    
  if (NewState != DISABLE)
  44:	b125      	cbz	r5, 50 <USART_IrDACmd+0x50>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:755
  {
    /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
    USARTx->CR3 |= CR3_IREN_Set;
  46:	8aa3      	ldrh	r3, [r4, #20]
  48:	b29b      	uxth	r3, r3
  4a:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  4e:	e004      	b.n	5a <USART_IrDACmd+0x5a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:760
  }
  else
  {
    /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
    USARTx->CR3 &= CR3_IREN_Reset;
  50:	8aa3      	ldrh	r3, [r4, #20]
  52:	f023 0302 	bic.w	r3, r3, #2	; 0x2
  56:	041b      	lsls	r3, r3, #16
  58:	0c1b      	lsrs	r3, r3, #16
  5a:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:762
  }
}
  5c:	bd70      	pop	{r4, r5, r6, pc}
  5e:	46c0      	nop			(mov r8, r8)
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_IrDAConfig:

00000000 <USART_IrDAConfig>:
USART_IrDAConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:730
  * @retval None
  */
void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_IrDAConfig+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:728
  *     @arg USART_IrDAMode_LowPower
  *     @arg USART_IrDAMode_Normal
  * @retval None
  */
void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:730
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:728
  *     @arg USART_IrDAMode_LowPower
  *     @arg USART_IrDAMode_Normal
  * @retval None
  */
void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:730
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_IrDAConfig+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_IrDAConfig+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_IrDAConfig+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_IrDAConfig+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_IrDAConfig+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_IrDAConfig+0x64>)
  2e:	f240 21da 	movw	r1, #730	; 0x2da
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:731
  assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
  36:	2d04      	cmp	r5, #4
  38:	d005      	beq.n	46 <USART_IrDAConfig+0x46>
  3a:	b125      	cbz	r5, 46 <USART_IrDAConfig+0x46>
  3c:	4809      	ldr	r0, [pc, #36]	(64 <USART_IrDAConfig+0x64>)
  3e:	f240 21db 	movw	r1, #731	; 0x2db
  42:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:733
    
  USARTx->CR3 &= CR3_IRLP_Mask;
  46:	8aa3      	ldrh	r3, [r4, #20]
  48:	f023 0304 	bic.w	r3, r3, #4	; 0x4
  4c:	041b      	lsls	r3, r3, #16
  4e:	0c1b      	lsrs	r3, r3, #16
  50:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:734
  USARTx->CR3 |= USART_IrDAMode;
  52:	8aa3      	ldrh	r3, [r4, #20]
  54:	b29b      	uxth	r3, r3
  56:	ea45 0303 	orr.w	r3, r5, r3
  5a:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:735
}
  5c:	bd70      	pop	{r4, r5, r6, pc}
  5e:	46c0      	nop			(mov r8, r8)
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_HalfDuplexCmd:

00000000 <USART_HalfDuplexCmd>:
USART_HalfDuplexCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:701
  * @retval None
  */
void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_HalfDuplexCmd+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:699
  * @param  NewState: new state of the USART Communication.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:701
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:699
  * @param  NewState: new state of the USART Communication.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:701
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_HalfDuplexCmd+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_HalfDuplexCmd+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_HalfDuplexCmd+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_HalfDuplexCmd+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_HalfDuplexCmd+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_HalfDuplexCmd+0x64>)
  2e:	f240 21bd 	movw	r1, #701	; 0x2bd
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:702
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  36:	2d01      	cmp	r5, #1
  38:	d904      	bls.n	44 <USART_HalfDuplexCmd+0x44>
  3a:	480a      	ldr	r0, [pc, #40]	(64 <USART_HalfDuplexCmd+0x64>)
  3c:	f240 21be 	movw	r1, #702	; 0x2be
  40:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:704
  
  if (NewState != DISABLE)
  44:	b125      	cbz	r5, 50 <USART_HalfDuplexCmd+0x50>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:707
  {
    /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
    USARTx->CR3 |= CR3_HDSEL_Set;
  46:	8aa3      	ldrh	r3, [r4, #20]
  48:	b29b      	uxth	r3, r3
  4a:	f043 0308 	orr.w	r3, r3, #8	; 0x8
  4e:	e004      	b.n	5a <USART_HalfDuplexCmd+0x5a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:712
  }
  else
  {
    /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
    USARTx->CR3 &= CR3_HDSEL_Reset;
  50:	8aa3      	ldrh	r3, [r4, #20]
  52:	f023 0308 	bic.w	r3, r3, #8	; 0x8
  56:	041b      	lsls	r3, r3, #16
  58:	0c1b      	lsrs	r3, r3, #16
  5a:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:714
  }
}
  5c:	bd70      	pop	{r4, r5, r6, pc}
  5e:	46c0      	nop			(mov r8, r8)
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_SmartCardNACKCmd:

00000000 <USART_SmartCardNACKCmd>:
USART_SmartCardNACKCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:675
  * @retval None
  */
void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));  
   0:	4b13      	ldr	r3, [pc, #76]	(50 <USART_SmartCardNACKCmd+0x50>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:673
  *   This parameter can be: ENABLE or DISABLE.  
  * @note The Smart Card mode is not available for UART4 and UART5.
  * @retval None
  */
void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:675
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));  
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:673
  *   This parameter can be: ENABLE or DISABLE.  
  * @note The Smart Card mode is not available for UART4 and UART5.
  * @retval None
  */
void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:675
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));  
   a:	d00c      	beq.n	26 <USART_SmartCardNACKCmd+0x26>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d008      	beq.n	26 <USART_SmartCardNACKCmd+0x26>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d004      	beq.n	26 <USART_SmartCardNACKCmd+0x26>
  1c:	480d      	ldr	r0, [pc, #52]	(54 <USART_SmartCardNACKCmd+0x54>)
  1e:	f240 21a3 	movw	r1, #675	; 0x2a3
  22:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:676
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  26:	2d01      	cmp	r5, #1
  28:	d904      	bls.n	34 <USART_SmartCardNACKCmd+0x34>
  2a:	480a      	ldr	r0, [pc, #40]	(54 <USART_SmartCardNACKCmd+0x54>)
  2c:	f44f 7129 	mov.w	r1, #676	; 0x2a4
  30:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:677
  if (NewState != DISABLE)
  34:	b125      	cbz	r5, 40 <USART_SmartCardNACKCmd+0x40>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:680
  {
    /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
    USARTx->CR3 |= CR3_NACK_Set;
  36:	8aa3      	ldrh	r3, [r4, #20]
  38:	b29b      	uxth	r3, r3
  3a:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  3e:	e004      	b.n	4a <USART_SmartCardNACKCmd+0x4a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:685
  }
  else
  {
    /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
    USARTx->CR3 &= CR3_NACK_Reset;
  40:	8aa3      	ldrh	r3, [r4, #20]
  42:	f023 0310 	bic.w	r3, r3, #16	; 0x10
  46:	041b      	lsls	r3, r3, #16
  48:	0c1b      	lsrs	r3, r3, #16
  4a:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:687
  }
}
  4c:	bd70      	pop	{r4, r5, r6, pc}
  4e:	46c0      	nop			(mov r8, r8)
  50:	40013800 	.word	0x40013800
  54:	00000000 	.word	0x00000000
Disassembly of section .text.USART_SmartCardCmd:

00000000 <USART_SmartCardCmd>:
USART_SmartCardCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:650
  * @retval None
  */
void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   0:	4b13      	ldr	r3, [pc, #76]	(50 <USART_SmartCardCmd+0x50>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:648
  *   This parameter can be: ENABLE or DISABLE.     
  * @note The Smart Card mode is not available for UART4 and UART5. 
  * @retval None
  */
void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:650
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:648
  *   This parameter can be: ENABLE or DISABLE.     
  * @note The Smart Card mode is not available for UART4 and UART5. 
  * @retval None
  */
void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:650
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   a:	d00c      	beq.n	26 <USART_SmartCardCmd+0x26>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d008      	beq.n	26 <USART_SmartCardCmd+0x26>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d004      	beq.n	26 <USART_SmartCardCmd+0x26>
  1c:	480d      	ldr	r0, [pc, #52]	(54 <USART_SmartCardCmd+0x54>)
  1e:	f240 218a 	movw	r1, #650	; 0x28a
  22:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:651
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  26:	2d01      	cmp	r5, #1
  28:	d904      	bls.n	34 <USART_SmartCardCmd+0x34>
  2a:	480a      	ldr	r0, [pc, #40]	(54 <USART_SmartCardCmd+0x54>)
  2c:	f240 218b 	movw	r1, #651	; 0x28b
  30:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:652
  if (NewState != DISABLE)
  34:	b125      	cbz	r5, 40 <USART_SmartCardCmd+0x40>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:655
  {
    /* Enable the SC mode by setting the SCEN bit in the CR3 register */
    USARTx->CR3 |= CR3_SCEN_Set;
  36:	8aa3      	ldrh	r3, [r4, #20]
  38:	b29b      	uxth	r3, r3
  3a:	f043 0320 	orr.w	r3, r3, #32	; 0x20
  3e:	e004      	b.n	4a <USART_SmartCardCmd+0x4a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:660
  }
  else
  {
    /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
    USARTx->CR3 &= CR3_SCEN_Reset;
  40:	8aa3      	ldrh	r3, [r4, #20]
  42:	f023 0320 	bic.w	r3, r3, #32	; 0x20
  46:	041b      	lsls	r3, r3, #16
  48:	0c1b      	lsrs	r3, r3, #16
  4a:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:662
  }
}
  4c:	bd70      	pop	{r4, r5, r6, pc}
  4e:	46c0      	nop			(mov r8, r8)
  50:	40013800 	.word	0x40013800
  54:	00000000 	.word	0x00000000
Disassembly of section .text.USART_SetPrescaler:

00000000 <USART_SetPrescaler>:
USART_SetPrescaler():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:631
  * @retval None
  */
void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
{ 
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b11      	ldr	r3, [pc, #68]	(48 <USART_SetPrescaler+0x48>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:629
  * @param  USART_Prescaler: specifies the prescaler clock.  
  * @note   The function is used for IrDA mode with UART4 and UART5.
  * @retval None
  */
void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
{ 
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:631
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:629
  * @param  USART_Prescaler: specifies the prescaler clock.  
  * @note   The function is used for IrDA mode with UART4 and UART5.
  * @retval None
  */
void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
{ 
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:631
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_SetPrescaler+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_SetPrescaler+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_SetPrescaler+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_SetPrescaler+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_SetPrescaler+0x36>
  2c:	4807      	ldr	r0, [pc, #28]	(4c <USART_SetPrescaler+0x4c>)
  2e:	f240 2177 	movw	r1, #631	; 0x277
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:634
  
  /* Clear the USART prescaler */
  USARTx->GTPR &= GTPR_MSB_Mask;
  36:	8b23      	ldrh	r3, [r4, #24]
  38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
  3c:	8323      	strh	r3, [r4, #24]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:636
  /* Set the USART prescaler */
  USARTx->GTPR |= USART_Prescaler;
  3e:	8b23      	ldrh	r3, [r4, #24]
  40:	b29b      	uxth	r3, r3
  42:	432b      	orrs	r3, r5
  44:	8323      	strh	r3, [r4, #24]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:637
}
  46:	bd70      	pop	{r4, r5, r6, pc}
  48:	40013800 	.word	0x40013800
  4c:	00000000 	.word	0x00000000
Disassembly of section .text.USART_SetGuardTime:

00000000 <USART_SetGuardTime>:
USART_SetGuardTime():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:611
  * @retval None
  */
void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
{    
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   0:	4b0d      	ldr	r3, [pc, #52]	(38 <USART_SetGuardTime+0x38>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:609
  * @param  USART_GuardTime: specifies the guard time.
  * @note The guard time bits are not available for UART4 and UART5.   
  * @retval None
  */
void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
{    
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:611
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:609
  * @param  USART_GuardTime: specifies the guard time.
  * @note The guard time bits are not available for UART4 and UART5.   
  * @retval None
  */
void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
{    
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:611
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   a:	d00c      	beq.n	26 <USART_SetGuardTime+0x26>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d008      	beq.n	26 <USART_SetGuardTime+0x26>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d004      	beq.n	26 <USART_SetGuardTime+0x26>
  1c:	4807      	ldr	r0, [pc, #28]	(3c <USART_SetGuardTime+0x3c>)
  1e:	f240 2163 	movw	r1, #611	; 0x263
  22:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:614
  
  /* Clear the USART Guard time */
  USARTx->GTPR &= GTPR_LSB_Mask;
  26:	8b23      	ldrh	r3, [r4, #24]
  28:	b2db      	uxtb	r3, r3
  2a:	8323      	strh	r3, [r4, #24]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:616
  /* Set the USART guard time */
  USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
  2c:	8b23      	ldrh	r3, [r4, #24]
  2e:	b29b      	uxth	r3, r3
  30:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  34:	8323      	strh	r3, [r4, #24]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:617
}
  36:	bd70      	pop	{r4, r5, r6, pc}
  38:	40013800 	.word	0x40013800
  3c:	00000000 	.word	0x00000000
Disassembly of section .text.USART_SendBreak:

00000000 <USART_SendBreak>:
USART_SendBreak():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:595
  * @retval None
  */
void USART_SendBreak(USART_TypeDef* USARTx)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b0f      	ldr	r3, [pc, #60]	(40 <USART_SendBreak+0x40>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:593
  *   This parameter can be one of the following values:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @retval None
  */
void USART_SendBreak(USART_TypeDef* USARTx)
{
   2:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:595
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:593
  *   This parameter can be one of the following values:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @retval None
  */
void USART_SendBreak(USART_TypeDef* USARTx)
{
   6:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:595
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   8:	d014      	beq.n	34 <USART_SendBreak+0x34>
   a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
   e:	4298      	cmp	r0, r3
  10:	d010      	beq.n	34 <USART_SendBreak+0x34>
  12:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  16:	4298      	cmp	r0, r3
  18:	d00c      	beq.n	34 <USART_SendBreak+0x34>
  1a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  1e:	4298      	cmp	r0, r3
  20:	d008      	beq.n	34 <USART_SendBreak+0x34>
  22:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  26:	4298      	cmp	r0, r3
  28:	d004      	beq.n	34 <USART_SendBreak+0x34>
  2a:	4806      	ldr	r0, [pc, #24]	(44 <USART_SendBreak+0x44>)
  2c:	f240 2153 	movw	r1, #595	; 0x253
  30:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:598
  
  /* Send break characters */
  USARTx->CR1 |= CR1_SBK_Set;
  34:	89a3      	ldrh	r3, [r4, #12]
  36:	b29b      	uxth	r3, r3
  38:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  3c:	81a3      	strh	r3, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:599
}
  3e:	bd10      	pop	{r4, pc}
  40:	40013800 	.word	0x40013800
  44:	00000000 	.word	0x00000000
Disassembly of section .text.USART_ReceiveData:

00000000 <USART_ReceiveData>:
USART_ReceiveData():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:579
  * @retval The received data.
  */
uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b0e      	ldr	r3, [pc, #56]	(3c <USART_ReceiveData+0x3c>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:577
  *   This parameter can be one of the following values:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @retval The received data.
  */
uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
{
   2:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:579
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:577
  *   This parameter can be one of the following values:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @retval The received data.
  */
uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
{
   6:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:579
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   8:	d014      	beq.n	34 <USART_ReceiveData+0x34>
   a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
   e:	4298      	cmp	r0, r3
  10:	d010      	beq.n	34 <USART_ReceiveData+0x34>
  12:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  16:	4298      	cmp	r0, r3
  18:	d00c      	beq.n	34 <USART_ReceiveData+0x34>
  1a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  1e:	4298      	cmp	r0, r3
  20:	d008      	beq.n	34 <USART_ReceiveData+0x34>
  22:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  26:	4298      	cmp	r0, r3
  28:	d004      	beq.n	34 <USART_ReceiveData+0x34>
  2a:	4805      	ldr	r0, [pc, #20]	(40 <USART_ReceiveData+0x40>)
  2c:	f240 2143 	movw	r1, #579	; 0x243
  30:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:582
  
  /* Receive Data */
  return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
  34:	88a0      	ldrh	r0, [r4, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:583
}
  36:	05c0      	lsls	r0, r0, #23
  38:	0dc0      	lsrs	r0, r0, #23
  3a:	bd10      	pop	{r4, pc}
  3c:	40013800 	.word	0x40013800
  40:	00000000 	.word	0x00000000
Disassembly of section .text.USART_SendData:

00000000 <USART_SendData>:
USART_SendData():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:562
  * @retval None
  */
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b13      	ldr	r3, [pc, #76]	(50 <USART_SendData+0x50>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:560
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  Data: the data to transmit.
  * @retval None
  */
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:562
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:560
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  Data: the data to transmit.
  * @retval None
  */
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:562
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_SendData+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_SendData+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_SendData+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_SendData+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_SendData+0x36>
  2c:	4809      	ldr	r0, [pc, #36]	(54 <USART_SendData+0x54>)
  2e:	f240 2132 	movw	r1, #562	; 0x232
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:563
  assert_param(IS_USART_DATA(Data)); 
  36:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
  3a:	d304      	bcc.n	46 <USART_SendData+0x46>
  3c:	4805      	ldr	r0, [pc, #20]	(54 <USART_SendData+0x54>)
  3e:	f240 2133 	movw	r1, #563	; 0x233
  42:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:566
    
  /* Transmit Data */
  USARTx->DR = (Data & (uint16_t)0x01FF);
  46:	05eb      	lsls	r3, r5, #23
  48:	0ddb      	lsrs	r3, r3, #23
  4a:	80a3      	strh	r3, [r4, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:567
}
  4c:	bd70      	pop	{r4, r5, r6, pc}
  4e:	46c0      	nop			(mov r8, r8)
  50:	40013800 	.word	0x40013800
  54:	00000000 	.word	0x00000000
Disassembly of section .text.USART_LINCmd:

00000000 <USART_LINCmd>:
USART_LINCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:536
  * @retval None
  */
void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_LINCmd+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:534
  * @param  NewState: new state of the USART LIN mode.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:536
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:534
  * @param  NewState: new state of the USART LIN mode.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:536
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_LINCmd+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_LINCmd+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_LINCmd+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_LINCmd+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_LINCmd+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_LINCmd+0x64>)
  2e:	f44f 7106 	mov.w	r1, #536	; 0x218
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:537
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  36:	2d01      	cmp	r5, #1
  38:	d904      	bls.n	44 <USART_LINCmd+0x44>
  3a:	480a      	ldr	r0, [pc, #40]	(64 <USART_LINCmd+0x64>)
  3c:	f240 2119 	movw	r1, #537	; 0x219
  40:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:539
  
  if (NewState != DISABLE)
  44:	b125      	cbz	r5, 50 <USART_LINCmd+0x50>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:542
  {
    /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
    USARTx->CR2 |= CR2_LINEN_Set;
  46:	8a23      	ldrh	r3, [r4, #16]
  48:	b29b      	uxth	r3, r3
  4a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  4e:	e004      	b.n	5a <USART_LINCmd+0x5a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:547
  }
  else
  {
    /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
    USARTx->CR2 &= CR2_LINEN_Reset;
  50:	8a23      	ldrh	r3, [r4, #16]
  52:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
  56:	041b      	lsls	r3, r3, #16
  58:	0c1b      	lsrs	r3, r3, #16
  5a:	8223      	strh	r3, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:549
  }
}
  5c:	bd70      	pop	{r4, r5, r6, pc}
  5e:	46c0      	nop			(mov r8, r8)
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_LINBreakDetectLengthConfig:

00000000 <USART_LINBreakDetectLengthConfig>:
USART_LINBreakDetectLengthConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:517
  * @retval None
  */
void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_LINBreakDetectLengthConfig+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:515
  *     @arg USART_LINBreakDetectLength_10b: 10-bit break detection
  *     @arg USART_LINBreakDetectLength_11b: 11-bit break detection
  * @retval None
  */
void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:517
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:515
  *     @arg USART_LINBreakDetectLength_10b: 10-bit break detection
  *     @arg USART_LINBreakDetectLength_11b: 11-bit break detection
  * @retval None
  */
void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:517
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_LINBreakDetectLengthConfig+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_LINBreakDetectLengthConfig+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_LINBreakDetectLengthConfig+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_LINBreakDetectLengthConfig+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_LINBreakDetectLengthConfig+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_LINBreakDetectLengthConfig+0x64>)
  2e:	f240 2105 	movw	r1, #517	; 0x205
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:518
  assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
  36:	b135      	cbz	r5, 46 <USART_LINBreakDetectLengthConfig+0x46>
  38:	2d20      	cmp	r5, #32
  3a:	d004      	beq.n	46 <USART_LINBreakDetectLengthConfig+0x46>
  3c:	4809      	ldr	r0, [pc, #36]	(64 <USART_LINBreakDetectLengthConfig+0x64>)
  3e:	f240 2106 	movw	r1, #518	; 0x206
  42:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:520
  
  USARTx->CR2 &= CR2_LBDL_Mask;
  46:	8a23      	ldrh	r3, [r4, #16]
  48:	f023 0320 	bic.w	r3, r3, #32	; 0x20
  4c:	041b      	lsls	r3, r3, #16
  4e:	0c1b      	lsrs	r3, r3, #16
  50:	8223      	strh	r3, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:521
  USARTx->CR2 |= USART_LINBreakDetectLength;  
  52:	8a23      	ldrh	r3, [r4, #16]
  54:	b29b      	uxth	r3, r3
  56:	ea45 0303 	orr.w	r3, r5, r3
  5a:	8223      	strh	r3, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:522
}
  5c:	bd70      	pop	{r4, r5, r6, pc}
  5e:	46c0      	nop			(mov r8, r8)
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_ReceiverWakeUpCmd:

00000000 <USART_ReceiverWakeUpCmd>:
USART_ReceiverWakeUpCmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:488
  * @retval None
  */
void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_ReceiverWakeUpCmd+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:486
  * @param  NewState: new state of the USART mute mode.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:488
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:486
  * @param  NewState: new state of the USART mute mode.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:488
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_ReceiverWakeUpCmd+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_ReceiverWakeUpCmd+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_ReceiverWakeUpCmd+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_ReceiverWakeUpCmd+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_ReceiverWakeUpCmd+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_ReceiverWakeUpCmd+0x64>)
  2e:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:489
  assert_param(IS_FUNCTIONAL_STATE(NewState)); 
  36:	2d01      	cmp	r5, #1
  38:	d904      	bls.n	44 <USART_ReceiverWakeUpCmd+0x44>
  3a:	480a      	ldr	r0, [pc, #40]	(64 <USART_ReceiverWakeUpCmd+0x64>)
  3c:	f240 11e9 	movw	r1, #489	; 0x1e9
  40:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:491
  
  if (NewState != DISABLE)
  44:	b125      	cbz	r5, 50 <USART_ReceiverWakeUpCmd+0x50>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:494
  {
    /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
    USARTx->CR1 |= CR1_RWU_Set;
  46:	89a3      	ldrh	r3, [r4, #12]
  48:	b29b      	uxth	r3, r3
  4a:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  4e:	e004      	b.n	5a <USART_ReceiverWakeUpCmd+0x5a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:499
  }
  else
  {
    /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
    USARTx->CR1 &= CR1_RWU_Reset;
  50:	89a3      	ldrh	r3, [r4, #12]
  52:	f023 0302 	bic.w	r3, r3, #2	; 0x2
  56:	041b      	lsls	r3, r3, #16
  58:	0c1b      	lsrs	r3, r3, #16
  5a:	81a3      	strh	r3, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:501
  }
}
  5c:	bd70      	pop	{r4, r5, r6, pc}
  5e:	46c0      	nop			(mov r8, r8)
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_WakeUpConfig:

00000000 <USART_WakeUpConfig>:
USART_WakeUpConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:469
  * @retval None
  */
void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_WakeUpConfig+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:467
  *     @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
  *     @arg USART_WakeUp_AddressMark: WakeUp by an address mark
  * @retval None
  */
void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:469
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:467
  *     @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
  *     @arg USART_WakeUp_AddressMark: WakeUp by an address mark
  * @retval None
  */
void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:469
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_WakeUpConfig+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_WakeUpConfig+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_WakeUpConfig+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_WakeUpConfig+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_WakeUpConfig+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_WakeUpConfig+0x64>)
  2e:	f240 11d5 	movw	r1, #469	; 0x1d5
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:470
  assert_param(IS_USART_WAKEUP(USART_WakeUp));
  36:	b13d      	cbz	r5, 48 <USART_WakeUpConfig+0x48>
  38:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
  3c:	d004      	beq.n	48 <USART_WakeUpConfig+0x48>
  3e:	4809      	ldr	r0, [pc, #36]	(64 <USART_WakeUpConfig+0x64>)
  40:	f44f 71eb 	mov.w	r1, #470	; 0x1d6
  44:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:472
  
  USARTx->CR1 &= CR1_WAKE_Mask;
  48:	89a3      	ldrh	r3, [r4, #12]
  4a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4e:	041b      	lsls	r3, r3, #16
  50:	0c1b      	lsrs	r3, r3, #16
  52:	81a3      	strh	r3, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:473
  USARTx->CR1 |= USART_WakeUp;
  54:	89a3      	ldrh	r3, [r4, #12]
  56:	b29b      	uxth	r3, r3
  58:	ea45 0303 	orr.w	r3, r5, r3
  5c:	81a3      	strh	r3, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:474
}
  5e:	bd70      	pop	{r4, r5, r6, pc}
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_SetAddress:

00000000 <USART_SetAddress>:
USART_SetAddress():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:446
  * @retval None
  */
void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b16      	ldr	r3, [pc, #88]	(5c <USART_SetAddress+0x5c>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:444
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  USART_Address: Indicates the address of the USART node.
  * @retval None
  */
void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:446
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:444
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  USART_Address: Indicates the address of the USART node.
  * @retval None
  */
void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:446
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_SetAddress+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_SetAddress+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_SetAddress+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_SetAddress+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_SetAddress+0x36>
  2c:	480c      	ldr	r0, [pc, #48]	(60 <USART_SetAddress+0x60>)
  2e:	f44f 71df 	mov.w	r1, #446	; 0x1be
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:447
  assert_param(IS_USART_ADDRESS(USART_Address)); 
  36:	2d0f      	cmp	r5, #15
  38:	d904      	bls.n	44 <USART_SetAddress+0x44>
  3a:	4809      	ldr	r0, [pc, #36]	(60 <USART_SetAddress+0x60>)
  3c:	f240 11bf 	movw	r1, #447	; 0x1bf
  40:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:450
    
  /* Clear the USART address */
  USARTx->CR2 &= CR2_Address_Mask;
  44:	8a23      	ldrh	r3, [r4, #16]
  46:	f023 030f 	bic.w	r3, r3, #15	; 0xf
  4a:	041b      	lsls	r3, r3, #16
  4c:	0c1b      	lsrs	r3, r3, #16
  4e:	8223      	strh	r3, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:452
  /* Set the USART address node */
  USARTx->CR2 |= USART_Address;
  50:	8a23      	ldrh	r3, [r4, #16]
  52:	b29b      	uxth	r3, r3
  54:	432b      	orrs	r3, r5
  56:	8223      	strh	r3, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:453
}
  58:	bd70      	pop	{r4, r5, r6, pc}
  5a:	46c0      	nop			(mov r8, r8)
  5c:	40013800 	.word	0x40013800
  60:	00000000 	.word	0x00000000
Disassembly of section .text.USART_DMACmd:

00000000 <USART_DMACmd>:
USART_DMACmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:418
  * @retval None
  */
void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_1234_PERIPH(USARTx));
   0:	4b1a      	ldr	r3, [pc, #104]	(6c <USART_DMACmd+0x6c>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:416
  *   This parameter can be: ENABLE or DISABLE.
  * @note The DMA mode is not available for UART5.  
  * @retval None
  */
void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:418
  /* Check the parameters */
  assert_param(IS_USART_1234_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:416
  *   This parameter can be: ENABLE or DISABLE.
  * @note The DMA mode is not available for UART5.  
  * @retval None
  */
void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
   a:	4616      	mov	r6, r2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:418
  /* Check the parameters */
  assert_param(IS_USART_1234_PERIPH(USARTx));
   c:	d010      	beq.n	30 <USART_DMACmd+0x30>
   e:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  12:	4298      	cmp	r0, r3
  14:	d00c      	beq.n	30 <USART_DMACmd+0x30>
  16:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  1a:	4298      	cmp	r0, r3
  1c:	d008      	beq.n	30 <USART_DMACmd+0x30>
  1e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  22:	4298      	cmp	r0, r3
  24:	d004      	beq.n	30 <USART_DMACmd+0x30>
  26:	4812      	ldr	r0, [pc, #72]	(70 <USART_DMACmd+0x70>)
  28:	f44f 71d1 	mov.w	r1, #418	; 0x1a2
  2c:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:419
  assert_param(IS_USART_DMAREQ(USART_DMAReq));  
  30:	f64f 733f 	movw	r3, #65343	; 0xff3f
  34:	ea05 0303 	and.w	r3, r5, r3
  38:	b903      	cbnz	r3, 3c <USART_DMACmd+0x3c>
  3a:	b925      	cbnz	r5, 46 <USART_DMACmd+0x46>
  3c:	480c      	ldr	r0, [pc, #48]	(70 <USART_DMACmd+0x70>)
  3e:	f240 11a3 	movw	r1, #419	; 0x1a3
  42:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:420
  assert_param(IS_FUNCTIONAL_STATE(NewState)); 
  46:	2e01      	cmp	r6, #1
  48:	d904      	bls.n	54 <USART_DMACmd+0x54>
  4a:	4809      	ldr	r0, [pc, #36]	(70 <USART_DMACmd+0x70>)
  4c:	f44f 71d2 	mov.w	r1, #420	; 0x1a4
  50:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:421
  if (NewState != DISABLE)
  54:	b126      	cbz	r6, 60 <USART_DMACmd+0x60>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:425
  {
    /* Enable the DMA transfer for selected requests by setting the DMAT and/or
       DMAR bits in the USART CR3 register */
    USARTx->CR3 |= USART_DMAReq;
  56:	8aa3      	ldrh	r3, [r4, #20]
  58:	b29b      	uxth	r3, r3
  5a:	ea45 0303 	orr.w	r3, r5, r3
  5e:	e003      	b.n	68 <USART_DMACmd+0x68>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:431
  }
  else
  {
    /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
       DMAR bits in the USART CR3 register */
    USARTx->CR3 &= (uint16_t)~USART_DMAReq;
  60:	8aa3      	ldrh	r3, [r4, #20]
  62:	b29b      	uxth	r3, r3
  64:	ea23 0305 	bic.w	r3, r3, r5
  68:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:433
  }
}
  6a:	bd70      	pop	{r4, r5, r6, pc}
  6c:	40013800 	.word	0x40013800
  70:	00000000 	.word	0x00000000
Disassembly of section .text.USART_ITConfig:

00000000 <USART_ITConfig>:
USART_ITConfig():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:361
void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
{
  uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
  uint32_t usartxbase = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b3a      	ldr	r3, [pc, #232]	(ec <USART_ITConfig+0xec>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:357
  * @param  NewState: new state of the specified USARTx interrupts.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:361
  uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
  uint32_t usartxbase = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:357
  * @param  NewState: new state of the specified USARTx interrupts.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
{
   6:	4605      	mov	r5, r0
   8:	460c      	mov	r4, r1
   a:	4616      	mov	r6, r2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:361
  uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
  uint32_t usartxbase = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   c:	d014      	beq.n	38 <USART_ITConfig+0x38>
   e:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  12:	4298      	cmp	r0, r3
  14:	d010      	beq.n	38 <USART_ITConfig+0x38>
  16:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  1a:	4298      	cmp	r0, r3
  1c:	d00c      	beq.n	38 <USART_ITConfig+0x38>
  1e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  22:	4298      	cmp	r0, r3
  24:	d008      	beq.n	38 <USART_ITConfig+0x38>
  26:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  2a:	4298      	cmp	r0, r3
  2c:	d004      	beq.n	38 <USART_ITConfig+0x38>
  2e:	4830      	ldr	r0, [pc, #192]	(f0 <USART_ITConfig+0xf0>)
  30:	f240 1169 	movw	r1, #361	; 0x169
  34:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:362
  assert_param(IS_USART_CONFIG_IT(USART_IT));
  38:	2c28      	cmp	r4, #40
  3a:	d021      	beq.n	80 <USART_ITConfig+0x80>
  3c:	f240 7327 	movw	r3, #1831	; 0x727
  40:	429c      	cmp	r4, r3
  42:	d01d      	beq.n	80 <USART_ITConfig+0x80>
  44:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
  48:	3b01      	subs	r3, #1
  4a:	429c      	cmp	r4, r3
  4c:	d018      	beq.n	80 <USART_ITConfig+0x80>
  4e:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
  52:	3b01      	subs	r3, #1
  54:	429c      	cmp	r4, r3
  56:	d013      	beq.n	80 <USART_ITConfig+0x80>
  58:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
  5c:	3b01      	subs	r3, #1
  5e:	429c      	cmp	r4, r3
  60:	d00e      	beq.n	80 <USART_ITConfig+0x80>
  62:	f640 0346 	movw	r3, #2118	; 0x846
  66:	429c      	cmp	r4, r3
  68:	d00a      	beq.n	80 <USART_ITConfig+0x80>
  6a:	f503 7392 	add.w	r3, r3, #292	; 0x124
  6e:	429c      	cmp	r4, r3
  70:	d006      	beq.n	80 <USART_ITConfig+0x80>
  72:	2c60      	cmp	r4, #96
  74:	d004      	beq.n	80 <USART_ITConfig+0x80>
  76:	481e      	ldr	r0, [pc, #120]	(f0 <USART_ITConfig+0xf0>)
  78:	f44f 71b5 	mov.w	r1, #362	; 0x16a
  7c:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:363
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  80:	2e01      	cmp	r6, #1
  82:	d904      	bls.n	8e <USART_ITConfig+0x8e>
  84:	481a      	ldr	r0, [pc, #104]	(f0 <USART_ITConfig+0xf0>)
  86:	f240 116b 	movw	r1, #363	; 0x16b
  8a:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:365
  /* The CTS interrupt is not available for UART4 and UART5 */
  if (USART_IT == USART_IT_CTS)
  8e:	f640 136a 	movw	r3, #2410	; 0x96a
  92:	429c      	cmp	r4, r3
  94:	d10f      	bne.n	b6 <USART_ITConfig+0xb6>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:367
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  96:	4b15      	ldr	r3, [pc, #84]	(ec <USART_ITConfig+0xec>)
  98:	429d      	cmp	r5, r3
  9a:	d00c      	beq.n	b6 <USART_ITConfig+0xb6>
  9c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  a0:	429d      	cmp	r5, r3
  a2:	d008      	beq.n	b6 <USART_ITConfig+0xb6>
  a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  a8:	429d      	cmp	r5, r3
  aa:	d004      	beq.n	b6 <USART_ITConfig+0xb6>
  ac:	4810      	ldr	r0, [pc, #64]	(f0 <USART_ITConfig+0xf0>)
  ae:	f240 116f 	movw	r1, #367	; 0x16f
  b2:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:377
  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);

  /* Get the interrupt position */
  itpos = USART_IT & IT_Mask;
  itmask = (((uint32_t)0x01) << itpos);
  b6:	2301      	movs	r3, #1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:373
  }   
  
  usartxbase = (uint32_t)USARTx;

  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);
  b8:	f3c4 1042 	ubfx	r0, r4, #5, #3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:377

  /* Get the interrupt position */
  itpos = USART_IT & IT_Mask;
  itmask = (((uint32_t)0x01) << itpos);
  bc:	f004 021f 	and.w	r2, r4, #31	; 0x1f
  c0:	fa13 f102 	lsls.w	r1, r3, r2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:379
    
  if (usartreg == 0x01) /* The IT is in CR1 register */
  c4:	4298      	cmp	r0, r3
  c6:	d102      	bne.n	ce <USART_ITConfig+0xce>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:381
  {
    usartxbase += 0x0C;
  c8:	f105 000c 	add.w	r0, r5, #12	; 0xc
  cc:	e005      	b.n	da <USART_ITConfig+0xda>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:383
  }
  else if (usartreg == 0x02) /* The IT is in CR2 register */
  ce:	2802      	cmp	r0, #2
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:385
  {
    usartxbase += 0x10;
  d0:	bf0c      	ite	eq
  d2:	f105 0010 	addeq.w	r0, r5, #16	; 0x10
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:389
  }
  else /* The IT is in CR3 register */
  {
    usartxbase += 0x14; 
  d6:	f105 0014 	addne.w	r0, r5, #20	; 0x14
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:391
  }
  if (NewState != DISABLE)
  da:	b116      	cbz	r6, e2 <USART_ITConfig+0xe2>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:393
  {
    *(__IO uint32_t*)usartxbase  |= itmask;
  dc:	6803      	ldr	r3, [r0, #0]
  de:	430b      	orrs	r3, r1
  e0:	e002      	b.n	e8 <USART_ITConfig+0xe8>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:397
  }
  else
  {
    *(__IO uint32_t*)usartxbase &= ~itmask;
  e2:	6803      	ldr	r3, [r0, #0]
  e4:	ea23 0301 	bic.w	r3, r3, r1
  e8:	6003      	str	r3, [r0, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:399
  }
}
  ea:	bd70      	pop	{r4, r5, r6, pc}
  ec:	40013800 	.word	0x40013800
  f0:	00000000 	.word	0x00000000
Disassembly of section .text.USART_Cmd:

00000000 <USART_Cmd>:
USART_Cmd():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:322
  * @retval None
  */
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b17      	ldr	r3, [pc, #92]	(60 <USART_Cmd+0x60>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:320
  * @param  NewState: new state of the USARTx peripheral.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:322
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:320
  * @param  NewState: new state of the USARTx peripheral.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
   6:	4604      	mov	r4, r0
   8:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:322
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   a:	d014      	beq.n	36 <USART_Cmd+0x36>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d010      	beq.n	36 <USART_Cmd+0x36>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d00c      	beq.n	36 <USART_Cmd+0x36>
  1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  20:	4298      	cmp	r0, r3
  22:	d008      	beq.n	36 <USART_Cmd+0x36>
  24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  28:	4298      	cmp	r0, r3
  2a:	d004      	beq.n	36 <USART_Cmd+0x36>
  2c:	480d      	ldr	r0, [pc, #52]	(64 <USART_Cmd+0x64>)
  2e:	f44f 71a1 	mov.w	r1, #322	; 0x142
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:323
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  36:	2d01      	cmp	r5, #1
  38:	d904      	bls.n	44 <USART_Cmd+0x44>
  3a:	480a      	ldr	r0, [pc, #40]	(64 <USART_Cmd+0x64>)
  3c:	f240 1143 	movw	r1, #323	; 0x143
  40:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:325
  
  if (NewState != DISABLE)
  44:	b125      	cbz	r5, 50 <USART_Cmd+0x50>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:328
  {
    /* Enable the selected USART by setting the UE bit in the CR1 register */
    USARTx->CR1 |= CR1_UE_Set;
  46:	89a3      	ldrh	r3, [r4, #12]
  48:	b29b      	uxth	r3, r3
  4a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4e:	e004      	b.n	5a <USART_Cmd+0x5a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:333
  }
  else
  {
    /* Disable the selected USART by clearing the UE bit in the CR1 register */
    USARTx->CR1 &= CR1_UE_Reset;
  50:	89a3      	ldrh	r3, [r4, #12]
  52:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  56:	041b      	lsls	r3, r3, #16
  58:	0c1b      	lsrs	r3, r3, #16
  5a:	81a3      	strh	r3, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:335
  }
}
  5c:	bd70      	pop	{r4, r5, r6, pc}
  5e:	46c0      	nop			(mov r8, r8)
  60:	40013800 	.word	0x40013800
  64:	00000000 	.word	0x00000000
Disassembly of section .text.USART_ClockInit:

00000000 <USART_ClockInit>:
USART_ClockInit():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:274
  */
void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
{
  uint32_t tmpreg = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   0:	4b25      	ldr	r3, [pc, #148]	(98 <USART_ClockInit+0x98>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:271
  *   USART peripheral.  
  * @note The Smart Card mode is not available for UART4 and UART5.
  * @retval None
  */
void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
{
   2:	b570      	push	{r4, r5, r6, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:274
  uint32_t tmpreg = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:271
  *   USART peripheral.  
  * @note The Smart Card mode is not available for UART4 and UART5.
  * @retval None
  */
void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
{
   6:	4605      	mov	r5, r0
   8:	460c      	mov	r4, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:274
  uint32_t tmpreg = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_123_PERIPH(USARTx));
   a:	d00c      	beq.n	26 <USART_ClockInit+0x26>
   c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  10:	4298      	cmp	r0, r3
  12:	d008      	beq.n	26 <USART_ClockInit+0x26>
  14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  18:	4298      	cmp	r0, r3
  1a:	d004      	beq.n	26 <USART_ClockInit+0x26>
  1c:	481f      	ldr	r0, [pc, #124]	(9c <USART_ClockInit+0x9c>)
  1e:	f44f 7189 	mov.w	r1, #274	; 0x112
  22:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:275
  assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
  26:	8823      	ldrh	r3, [r4, #0]
  28:	b13b      	cbz	r3, 3a <USART_ClockInit+0x3a>
  2a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  2e:	d004      	beq.n	3a <USART_ClockInit+0x3a>
  30:	481a      	ldr	r0, [pc, #104]	(9c <USART_ClockInit+0x9c>)
  32:	f240 1113 	movw	r1, #275	; 0x113
  36:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:276
  assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
  3a:	8863      	ldrh	r3, [r4, #2]
  3c:	b13b      	cbz	r3, 4e <USART_ClockInit+0x4e>
  3e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  42:	d004      	beq.n	4e <USART_ClockInit+0x4e>
  44:	4815      	ldr	r0, [pc, #84]	(9c <USART_ClockInit+0x9c>)
  46:	f44f 718a 	mov.w	r1, #276	; 0x114
  4a:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:277
  assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
  4e:	88a3      	ldrh	r3, [r4, #4]
  50:	b13b      	cbz	r3, 62 <USART_ClockInit+0x62>
  52:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  56:	d004      	beq.n	62 <USART_ClockInit+0x62>
  58:	4810      	ldr	r0, [pc, #64]	(9c <USART_ClockInit+0x9c>)
  5a:	f240 1115 	movw	r1, #277	; 0x115
  5e:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:278
  assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
  62:	88e3      	ldrh	r3, [r4, #6]
  64:	b13b      	cbz	r3, 76 <USART_ClockInit+0x76>
  66:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  6a:	d004      	beq.n	76 <USART_ClockInit+0x76>
  6c:	480b      	ldr	r0, [pc, #44]	(9c <USART_ClockInit+0x9c>)
  6e:	f44f 718b 	mov.w	r1, #278	; 0x116
  72:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:292
  /* Set CPHA bit according to USART_CPHA value */
  /* Set LBCL bit according to USART_LastBit value */
  tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
                 USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
  76:	8821      	ldrh	r1, [r4, #0]
  78:	8863      	ldrh	r3, [r4, #2]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:281
  assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
  assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
  assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
  
/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
  7a:	8a2a      	ldrh	r2, [r5, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:292
  /* Set CPHA bit according to USART_CPHA value */
  /* Set LBCL bit according to USART_LastBit value */
  tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
                 USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
  7c:	430b      	orrs	r3, r1
  7e:	88a1      	ldrh	r1, [r4, #4]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:283
  assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
  
/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
  /* Clear CLKEN, CPOL, CPHA and LBCL bits */
  tmpreg &= CR2_CLOCK_CLEAR_Mask;
  80:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:292
  /* Set CPHA bit according to USART_CPHA value */
  /* Set LBCL bit according to USART_LastBit value */
  tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
                 USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
  84:	430b      	orrs	r3, r1
  86:	88e1      	ldrh	r1, [r4, #6]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:283
  assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
  
/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
  /* Clear CLKEN, CPOL, CPHA and LBCL bits */
  tmpreg &= CR2_CLOCK_CLEAR_Mask;
  88:	0412      	lsls	r2, r2, #16
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:292
  /* Set CPHA bit according to USART_CPHA value */
  /* Set LBCL bit according to USART_LastBit value */
  tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
                 USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
  8a:	430b      	orrs	r3, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:283
  assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
  
/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
  /* Clear CLKEN, CPOL, CPHA and LBCL bits */
  tmpreg &= CR2_CLOCK_CLEAR_Mask;
  8c:	0c12      	lsrs	r2, r2, #16
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:292
  /* Set CPHA bit according to USART_CPHA value */
  /* Set LBCL bit according to USART_LastBit value */
  tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
                 USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
  8e:	b29b      	uxth	r3, r3
  90:	4313      	orrs	r3, r2
  92:	822b      	strh	r3, [r5, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:293
}
  94:	bd70      	pop	{r4, r5, r6, pc}
  96:	46c0      	nop			(mov r8, r8)
  98:	40013800 	.word	0x40013800
  9c:	00000000 	.word	0x00000000
Disassembly of section .text.USART_Init:

00000000 <USART_Init>:
USART_Init():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:166
  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
  *   that contains the configuration information for the specified USART peripheral.
  * @retval None
  */
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
   0:	b530      	push	{r4, r5, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:173
  uint32_t integerdivider = 0x00;
  uint32_t fractionaldivider = 0x00;
  uint32_t usartxbase = 0;
  RCC_ClocksTypeDef RCC_ClocksStatus;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   2:	4b58      	ldr	r3, [pc, #352]	(164 <USART_Init+0x164>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:166
  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
  *   that contains the configuration information for the specified USART peripheral.
  * @retval None
  */
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
   4:	b087      	sub	sp, #28
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:173
  uint32_t integerdivider = 0x00;
  uint32_t fractionaldivider = 0x00;
  uint32_t usartxbase = 0;
  RCC_ClocksTypeDef RCC_ClocksStatus;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   6:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:166
  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
  *   that contains the configuration information for the specified USART peripheral.
  * @retval None
  */
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
   8:	4604      	mov	r4, r0
   a:	460d      	mov	r5, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:173
  uint32_t integerdivider = 0x00;
  uint32_t fractionaldivider = 0x00;
  uint32_t usartxbase = 0;
  RCC_ClocksTypeDef RCC_ClocksStatus;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   c:	d013      	beq.n	36 <USART_Init+0x36>
   e:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  12:	4298      	cmp	r0, r3
  14:	d00f      	beq.n	36 <USART_Init+0x36>
  16:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  1a:	4298      	cmp	r0, r3
  1c:	d00b      	beq.n	36 <USART_Init+0x36>
  1e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  22:	4298      	cmp	r0, r3
  24:	d007      	beq.n	36 <USART_Init+0x36>
  26:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  2a:	4298      	cmp	r0, r3
  2c:	d003      	beq.n	36 <USART_Init+0x36>
  2e:	484e      	ldr	r0, [pc, #312]	(168 <USART_Init+0x168>)
  30:	21ad      	movs	r1, #173
  32:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:174
  assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
  36:	682b      	ldr	r3, [r5, #0]
  38:	4a4c      	ldr	r2, [pc, #304]	(16c <USART_Init+0x16c>)
  3a:	3b01      	subs	r3, #1
  3c:	4293      	cmp	r3, r2
  3e:	d903      	bls.n	48 <USART_Init+0x48>
  40:	4849      	ldr	r0, [pc, #292]	(168 <USART_Init+0x168>)
  42:	21ae      	movs	r1, #174
  44:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:175
  assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
  48:	88ab      	ldrh	r3, [r5, #4]
  4a:	b133      	cbz	r3, 5a <USART_Init+0x5a>
  4c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
  50:	d003      	beq.n	5a <USART_Init+0x5a>
  52:	4845      	ldr	r0, [pc, #276]	(168 <USART_Init+0x168>)
  54:	21af      	movs	r1, #175
  56:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:176
  assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
  5a:	88eb      	ldrh	r3, [r5, #6]
  5c:	b163      	cbz	r3, 78 <USART_Init+0x78>
  5e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
  62:	d009      	beq.n	78 <USART_Init+0x78>
  64:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
  68:	d006      	beq.n	78 <USART_Init+0x78>
  6a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
  6e:	d003      	beq.n	78 <USART_Init+0x78>
  70:	483d      	ldr	r0, [pc, #244]	(168 <USART_Init+0x168>)
  72:	21b0      	movs	r1, #176
  74:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:177
  assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
  78:	892b      	ldrh	r3, [r5, #8]
  7a:	b14b      	cbz	r3, 90 <USART_Init+0x90>
  7c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  80:	d006      	beq.n	90 <USART_Init+0x90>
  82:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
  86:	d003      	beq.n	90 <USART_Init+0x90>
  88:	4837      	ldr	r0, [pc, #220]	(168 <USART_Init+0x168>)
  8a:	21b1      	movs	r1, #177
  8c:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:178
  assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
  90:	896a      	ldrh	r2, [r5, #10]
  92:	f64f 73f3 	movw	r3, #65523	; 0xfff3
  96:	ea02 0303 	and.w	r3, r2, r3
  9a:	b903      	cbnz	r3, 9e <USART_Init+0x9e>
  9c:	b91a      	cbnz	r2, a6 <USART_Init+0xa6>
  9e:	4832      	ldr	r0, [pc, #200]	(168 <USART_Init+0x168>)
  a0:	21b2      	movs	r1, #178
  a2:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:179
  assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
  a6:	89ab      	ldrh	r3, [r5, #12]
  a8:	b163      	cbz	r3, c4 <USART_Init+0xc4>
  aa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  ae:	d009      	beq.n	c4 <USART_Init+0xc4>
  b0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  b4:	d006      	beq.n	c4 <USART_Init+0xc4>
  b6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
  ba:	d003      	beq.n	c4 <USART_Init+0xc4>
  bc:	482a      	ldr	r0, [pc, #168]	(168 <USART_Init+0x168>)
  be:	21b3      	movs	r1, #179
  c0:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:181
  /* The hardware flow control is available only for USART1, USART2 and USART3 */
  if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
  c4:	89ab      	ldrh	r3, [r5, #12]
  c6:	b173      	cbz	r3, e6 <USART_Init+0xe6>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:183
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  c8:	4b26      	ldr	r3, [pc, #152]	(164 <USART_Init+0x164>)
  ca:	429c      	cmp	r4, r3
  cc:	d00b      	beq.n	e6 <USART_Init+0xe6>
  ce:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
  d2:	429c      	cmp	r4, r3
  d4:	d007      	beq.n	e6 <USART_Init+0xe6>
  d6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  da:	429c      	cmp	r4, r3
  dc:	d003      	beq.n	e6 <USART_Init+0xe6>
  de:	4822      	ldr	r0, [pc, #136]	(168 <USART_Init+0x168>)
  e0:	21b7      	movs	r1, #183
  e2:	f7ff fffe 	bl	0 <assert_failed>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:189
  }

  usartxbase = (uint32_t)USARTx;

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
  e6:	8a23      	ldrh	r3, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:197
  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
  
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
  e8:	88ea      	ldrh	r2, [r5, #6]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:191
  usartxbase = (uint32_t)USARTx;

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
  /* Clear STOP[13:12] bits */
  tmpreg &= CR2_STOP_CLEAR_Mask;
  ea:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
  ee:	041b      	lsls	r3, r3, #16
  f0:	0c1b      	lsrs	r3, r3, #16
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:197
  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
  
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
  f2:	4313      	orrs	r3, r2
  f4:	8223      	strh	r3, [r4, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:200

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
  f6:	89a2      	ldrh	r2, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:210
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
            USART_InitStruct->USART_Mode;
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
  f8:	88a9      	ldrh	r1, [r5, #4]
  fa:	892b      	ldrh	r3, [r5, #8]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:202
  USARTx->CR2 = (uint16_t)tmpreg;

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= CR1_CLEAR_Mask;
  fc:	f422 52b0 	bic.w	r2, r2, #5632	; 0x1600
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:210
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
            USART_InitStruct->USART_Mode;
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
 100:	430b      	orrs	r3, r1
 102:	8969      	ldrh	r1, [r5, #10]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:202
  USARTx->CR2 = (uint16_t)tmpreg;

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= CR1_CLEAR_Mask;
 104:	f022 020c 	bic.w	r2, r2, #12	; 0xc
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:210
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
            USART_InitStruct->USART_Mode;
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
 108:	430b      	orrs	r3, r1
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:202
  USARTx->CR2 = (uint16_t)tmpreg;

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= CR1_CLEAR_Mask;
 10a:	0412      	lsls	r2, r2, #16
 10c:	0c12      	lsrs	r2, r2, #16
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:210
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
            USART_InitStruct->USART_Mode;
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
 10e:	b29b      	uxth	r3, r3
 110:	4313      	orrs	r3, r2
 112:	81a3      	strh	r3, [r4, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:213

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
 114:	8aa3      	ldrh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:220
  tmpreg &= CR3_CLEAR_Mask;
  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
  /* Write to USART CR3 */
  USARTx->CR3 = (uint16_t)tmpreg;
 116:	89aa      	ldrh	r2, [r5, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:215
  USARTx->CR1 = (uint16_t)tmpreg;

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;
 118:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 11c:	041b      	lsls	r3, r3, #16
 11e:	0c1b      	lsrs	r3, r3, #16
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:220
  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
  /* Write to USART CR3 */
  USARTx->CR3 = (uint16_t)tmpreg;
 120:	4313      	orrs	r3, r2
 122:	82a3      	strh	r3, [r4, #20]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:224

/*---------------------------- USART BRR Configuration -----------------------*/
  /* Configure the USART Baud Rate -------------------------------------------*/
  RCC_GetClocksFreq(&RCC_ClocksStatus);
 124:	a801      	add	r0, sp, #4
 126:	f7ff fffe 	bl	0 <RCC_GetClocksFreq>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:225
  if (usartxbase == USART1_BASE)
 12a:	4b0e      	ldr	r3, [pc, #56]	(164 <USART_Init+0x164>)
 12c:	429c      	cmp	r4, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:227
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 12e:	bf0c      	ite	eq
 130:	9b04      	ldreq	r3, [sp, #16]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:231
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 132:	9b03      	ldrne	r3, [sp, #12]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:234
  }
  /* Determine the integer part */
  integerdivider = ((0x19 * apbclock) / (0x04 * (USART_InitStruct->USART_BaudRate)));
 134:	2219      	movs	r2, #25
 136:	435a      	muls	r2, r3
 138:	682b      	ldr	r3, [r5, #0]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:235
  tmpreg = (integerdivider / 0x64) << 0x04;
 13a:	2064      	movs	r0, #100
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:234
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
  }
  /* Determine the integer part */
  integerdivider = ((0x19 * apbclock) / (0x04 * (USART_InitStruct->USART_BaudRate)));
 13c:	009b      	lsls	r3, r3, #2
 13e:	fbb2 f2f3 	udiv	r2, r2, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:235
  tmpreg = (integerdivider / 0x64) << 0x04;
 142:	fbb2 f1f0 	udiv	r1, r2, r0
 146:	0109      	lsls	r1, r1, #4
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:238
  /* Determine the fractional part */
  fractionaldivider = integerdivider - (0x64 * (tmpreg >> 0x04));
  tmpreg |= ((((fractionaldivider * 0x10) + 0x32) / 0x64)) & ((uint8_t)0x0F);
 148:	090b      	lsrs	r3, r1, #4
 14a:	fb00 2313 	mls	r3, r0, r3, r2
 14e:	011b      	lsls	r3, r3, #4
 150:	3332      	adds	r3, #50
 152:	fbb3 f3f0 	udiv	r3, r3, r0
 156:	f003 030f 	and.w	r3, r3, #15	; 0xf
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:240
  /* Write to USART BRR */
  USARTx->BRR = (uint16_t)tmpreg;
 15a:	430b      	orrs	r3, r1
 15c:	b29b      	uxth	r3, r3
 15e:	8123      	strh	r3, [r4, #8]
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:241
}
 160:	b007      	add	sp, #28
 162:	bd30      	pop	{r4, r5, pc}
 164:	40013800 	.word	0x40013800
 168:	00000000 	.word	0x00000000
 16c:	0044aa1f 	.word	0x0044aa1f
Disassembly of section .text.USART_DeInit:

00000000 <USART_DeInit>:
USART_DeInit():
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:123
  * @retval None
  */
void USART_DeInit(USART_TypeDef* USARTx)
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   0:	4b27      	ldr	r3, [pc, #156]	(a0 <USART_DeInit+0xa0>)
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:121
  * @param  USARTx: Select the USART or the UART peripheral. 
  *   This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5.
  * @retval None
  */
void USART_DeInit(USART_TypeDef* USARTx)
{
   2:	b510      	push	{r4, lr}
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:123
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   4:	4298      	cmp	r0, r3
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:121
  * @param  USARTx: Select the USART or the UART peripheral. 
  *   This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5.
  * @retval None
  */
void USART_DeInit(USART_TypeDef* USARTx)
{
   6:	4604      	mov	r4, r0
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:123
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
   8:	d014      	beq.n	34 <USART_DeInit+0x34>
   a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
   e:	4298      	cmp	r0, r3
  10:	d032      	beq.n	78 <USART_DeInit+0x78>
  12:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  16:	4298      	cmp	r0, r3
  18:	d036      	beq.n	88 <USART_DeInit+0x88>
  1a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  1e:	4298      	cmp	r0, r3
  20:	d026      	beq.n	70 <USART_DeInit+0x70>
  22:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  26:	4298      	cmp	r0, r3
  28:	d022      	beq.n	70 <USART_DeInit+0x70>
  2a:	481e      	ldr	r0, [pc, #120]	(a4 <USART_DeInit+0xa4>)
  2c:	217b      	movs	r1, #123
  2e:	f7ff fffe 	bl	0 <assert_failed>
  32:	e01d      	b.n	70 <USART_DeInit+0x70>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:127

  if (USARTx == USART1)
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
  34:	2101      	movs	r1, #1
  36:	f44f 4080 	mov.w	r0, #16384	; 0x4000
  3a:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:128
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  3e:	f44f 4080 	mov.w	r0, #16384	; 0x4000
  42:	2100      	movs	r1, #0
  44:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
  48:	e028      	b.n	9c <USART_DeInit+0x9c>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:142
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
  }    
  else if (USARTx == UART4)
  {
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
  4a:	f44f 2000 	mov.w	r0, #524288	; 0x80000
  4e:	2101      	movs	r1, #1
  50:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:143
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
  54:	f44f 2000 	mov.w	r0, #524288	; 0x80000
  58:	e01d      	b.n	96 <USART_DeInit+0x96>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:147
  }    
  else
  {
    if (USARTx == UART5)
  5a:	4b13      	ldr	r3, [pc, #76]	(a8 <USART_DeInit+0xa8>)
  5c:	429c      	cmp	r4, r3
  5e:	d11d      	bne.n	9c <USART_DeInit+0x9c>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:149
    { 
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
  60:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  64:	2101      	movs	r1, #1
  66:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:150
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
  6a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  6e:	e012      	b.n	96 <USART_DeInit+0x96>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:140
  else if (USARTx == USART3)
  {
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
  }    
  else if (USARTx == UART4)
  70:	4b0e      	ldr	r3, [pc, #56]	(ac <USART_DeInit+0xac>)
  72:	429c      	cmp	r4, r3
  74:	d1f1      	bne.n	5a <USART_DeInit+0x5a>
  76:	e7e8      	b.n	4a <USART_DeInit+0x4a>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:132
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  }
  else if (USARTx == USART2)
  {
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
  78:	f44f 3000 	mov.w	r0, #131072	; 0x20000
  7c:	2101      	movs	r1, #1
  7e:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:133
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
  82:	f44f 3000 	mov.w	r0, #131072	; 0x20000
  86:	e006      	b.n	96 <USART_DeInit+0x96>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:137
  }
  else if (USARTx == USART3)
  {
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
  88:	f44f 2080 	mov.w	r0, #262144	; 0x40000
  8c:	2101      	movs	r1, #1
  8e:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:138
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
  92:	f44f 2080 	mov.w	r0, #262144	; 0x40000
  96:	2100      	movs	r1, #0
  98:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\WkPjt\MStory2.0\Mango-Z1.Firmware\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_usart.c:153
    { 
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
    }
  }
}
  9c:	bd10      	pop	{r4, pc}
  9e:	46c0      	nop			(mov r8, r8)
  a0:	40013800 	.word	0x40013800
  a4:	00000000 	.word	0x00000000
  a8:	40005000 	.word	0x40005000
  ac:	40004c00 	.word	0x40004c00
